{"version":3,"file":"index.js","sources":["../node_modules/lucide-react/dist/esm/shared/src/utils.js","../node_modules/lucide-react/dist/esm/defaultAttributes.js","../node_modules/lucide-react/dist/esm/Icon.js","../node_modules/lucide-react/dist/esm/createLucideIcon.js","../node_modules/lucide-react/dist/esm/icons/chevron-right.js","../node_modules/lucide-react/dist/esm/icons/circle-help.js","../node_modules/lucide-react/dist/esm/icons/circle-plus.js","../node_modules/lucide-react/dist/esm/icons/ellipsis-vertical.js","../node_modules/lucide-react/dist/esm/icons/graduation-cap.js","../node_modules/lucide-react/dist/esm/icons/house.js","../node_modules/lucide-react/dist/esm/icons/maximize-2.js","../node_modules/lucide-react/dist/esm/icons/message-circle.js","../node_modules/lucide-react/dist/esm/icons/minimize-2.js","../node_modules/lucide-react/dist/esm/icons/send.js","../node_modules/lucide-react/dist/esm/icons/star.js","../node_modules/lucide-react/dist/esm/icons/thumbs-down.js","../node_modules/lucide-react/dist/esm/icons/thumbs-up.js","../node_modules/lucide-react/dist/esm/icons/x.js","../node_modules/zustand/esm/vanilla.mjs","../node_modules/zustand/esm/react.mjs","../node_modules/zustand/esm/middleware.mjs","../src/stores/chatStore.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js","../node_modules/engine.io-client/build/esm/globals.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/polling-xhr.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/v4.js","../src/context/SocketContext.js","../src/hooks/useSendMessage.js","../src/components/ChatWidget.jsx","../src/components/ChatWidgetProvider.jsx"],"sourcesContent":["/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nconst toKebabCase = (string) => string.replace(/([a-z0-9])([A-Z])/g, \"$1-$2\").toLowerCase();\nconst toCamelCase = (string) => string.replace(\n  /^([A-Z])|[\\s-_]+(\\w)/g,\n  (match, p1, p2) => p2 ? p2.toUpperCase() : p1.toLowerCase()\n);\nconst toPascalCase = (string) => {\n  const camelCase = toCamelCase(string);\n  return camelCase.charAt(0).toUpperCase() + camelCase.slice(1);\n};\nconst mergeClasses = (...classes) => classes.filter((className, index, array) => {\n  return Boolean(className) && className.trim() !== \"\" && array.indexOf(className) === index;\n}).join(\" \").trim();\nconst hasA11yProp = (props) => {\n  for (const prop in props) {\n    if (prop.startsWith(\"aria-\") || prop === \"role\" || prop === \"title\") {\n      return true;\n    }\n  }\n};\n\nexport { hasA11yProp, mergeClasses, toCamelCase, toKebabCase, toPascalCase };\n//# sourceMappingURL=utils.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nvar defaultAttributes = {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: 24,\n  height: 24,\n  viewBox: \"0 0 24 24\",\n  fill: \"none\",\n  stroke: \"currentColor\",\n  strokeWidth: 2,\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\"\n};\n\nexport { defaultAttributes as default };\n//# sourceMappingURL=defaultAttributes.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.js';\nimport { mergeClasses, hasA11yProp } from './shared/src/utils.js';\n\nconst Icon = forwardRef(\n  ({\n    color = \"currentColor\",\n    size = 24,\n    strokeWidth = 2,\n    absoluteStrokeWidth,\n    className = \"\",\n    children,\n    iconNode,\n    ...rest\n  }, ref) => createElement(\n    \"svg\",\n    {\n      ref,\n      ...defaultAttributes,\n      width: size,\n      height: size,\n      stroke: color,\n      strokeWidth: absoluteStrokeWidth ? Number(strokeWidth) * 24 / Number(size) : strokeWidth,\n      className: mergeClasses(\"lucide\", className),\n      ...!children && !hasA11yProp(rest) && { \"aria-hidden\": \"true\" },\n      ...rest\n    },\n    [\n      ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n      ...Array.isArray(children) ? children : [children]\n    ]\n  )\n);\n\nexport { Icon as default };\n//# sourceMappingURL=Icon.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport { mergeClasses, toKebabCase, toPascalCase } from './shared/src/utils.js';\nimport Icon from './Icon.js';\n\nconst createLucideIcon = (iconName, iconNode) => {\n  const Component = forwardRef(\n    ({ className, ...props }, ref) => createElement(Icon, {\n      ref,\n      iconNode,\n      className: mergeClasses(\n        `lucide-${toKebabCase(toPascalCase(iconName))}`,\n        `lucide-${iconName}`,\n        className\n      ),\n      ...props\n    })\n  );\n  Component.displayName = toPascalCase(iconName);\n  return Component;\n};\n\nexport { createLucideIcon as default };\n//# sourceMappingURL=createLucideIcon.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [[\"path\", { d: \"m9 18 6-6-6-6\", key: \"mthhwq\" }]];\nconst ChevronRight = createLucideIcon(\"chevron-right\", __iconNode);\n\nexport { __iconNode, ChevronRight as default };\n//# sourceMappingURL=chevron-right.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\", key: \"1u773s\" }],\n  [\"path\", { d: \"M12 17h.01\", key: \"p32p05\" }]\n];\nconst CircleHelp = createLucideIcon(\"circle-help\", __iconNode);\n\nexport { __iconNode, CircleHelp as default };\n//# sourceMappingURL=circle-help.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"path\", { d: \"M8 12h8\", key: \"1wcyev\" }],\n  [\"path\", { d: \"M12 8v8\", key: \"napkw2\" }]\n];\nconst CirclePlus = createLucideIcon(\"circle-plus\", __iconNode);\n\nexport { __iconNode, CirclePlus as default };\n//# sourceMappingURL=circle-plus.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"1\", key: \"41hilf\" }],\n  [\"circle\", { cx: \"12\", cy: \"5\", r: \"1\", key: \"gxeob9\" }],\n  [\"circle\", { cx: \"12\", cy: \"19\", r: \"1\", key: \"lyex9k\" }]\n];\nconst EllipsisVertical = createLucideIcon(\"ellipsis-vertical\", __iconNode);\n\nexport { __iconNode, EllipsisVertical as default };\n//# sourceMappingURL=ellipsis-vertical.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M21.42 10.922a1 1 0 0 0-.019-1.838L12.83 5.18a2 2 0 0 0-1.66 0L2.6 9.08a1 1 0 0 0 0 1.832l8.57 3.908a2 2 0 0 0 1.66 0z\",\n      key: \"j76jl0\"\n    }\n  ],\n  [\"path\", { d: \"M22 10v6\", key: \"1lu8f3\" }],\n  [\"path\", { d: \"M6 12.5V16a6 3 0 0 0 12 0v-3.5\", key: \"1r8lef\" }]\n];\nconst GraduationCap = createLucideIcon(\"graduation-cap\", __iconNode);\n\nexport { __iconNode, GraduationCap as default };\n//# sourceMappingURL=graduation-cap.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 21v-8a1 1 0 0 0-1-1h-4a1 1 0 0 0-1 1v8\", key: \"5wwlr5\" }],\n  [\n    \"path\",\n    {\n      d: \"M3 10a2 2 0 0 1 .709-1.528l7-5.999a2 2 0 0 1 2.582 0l7 5.999A2 2 0 0 1 21 10v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z\",\n      key: \"1d0kgt\"\n    }\n  ]\n];\nconst House = createLucideIcon(\"house\", __iconNode);\n\nexport { __iconNode, House as default };\n//# sourceMappingURL=house.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M15 3h6v6\", key: \"1q9fwt\" }],\n  [\"path\", { d: \"m21 3-7 7\", key: \"1l2asr\" }],\n  [\"path\", { d: \"m3 21 7-7\", key: \"tjx5ai\" }],\n  [\"path\", { d: \"M9 21H3v-6\", key: \"wtvkvv\" }]\n];\nconst Maximize2 = createLucideIcon(\"maximize-2\", __iconNode);\n\nexport { __iconNode, Maximize2 as default };\n//# sourceMappingURL=maximize-2.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M7.9 20A9 9 0 1 0 4 16.1L2 22Z\", key: \"vv11sd\" }]\n];\nconst MessageCircle = createLucideIcon(\"message-circle\", __iconNode);\n\nexport { __iconNode, MessageCircle as default };\n//# sourceMappingURL=message-circle.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"m14 10 7-7\", key: \"oa77jy\" }],\n  [\"path\", { d: \"M20 10h-6V4\", key: \"mjg0md\" }],\n  [\"path\", { d: \"m3 21 7-7\", key: \"tjx5ai\" }],\n  [\"path\", { d: \"M4 14h6v6\", key: \"rmj7iw\" }]\n];\nconst Minimize2 = createLucideIcon(\"minimize-2\", __iconNode);\n\nexport { __iconNode, Minimize2 as default };\n//# sourceMappingURL=minimize-2.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M14.536 21.686a.5.5 0 0 0 .937-.024l6.5-19a.496.496 0 0 0-.635-.635l-19 6.5a.5.5 0 0 0-.024.937l7.93 3.18a2 2 0 0 1 1.112 1.11z\",\n      key: \"1ffxy3\"\n    }\n  ],\n  [\"path\", { d: \"m21.854 2.147-10.94 10.939\", key: \"12cjpa\" }]\n];\nconst Send = createLucideIcon(\"send\", __iconNode);\n\nexport { __iconNode, Send as default };\n//# sourceMappingURL=send.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\n    \"path\",\n    {\n      d: \"M11.525 2.295a.53.53 0 0 1 .95 0l2.31 4.679a2.123 2.123 0 0 0 1.595 1.16l5.166.756a.53.53 0 0 1 .294.904l-3.736 3.638a2.123 2.123 0 0 0-.611 1.878l.882 5.14a.53.53 0 0 1-.771.56l-4.618-2.428a2.122 2.122 0 0 0-1.973 0L6.396 21.01a.53.53 0 0 1-.77-.56l.881-5.139a2.122 2.122 0 0 0-.611-1.879L2.16 9.795a.53.53 0 0 1 .294-.906l5.165-.755a2.122 2.122 0 0 0 1.597-1.16z\",\n      key: \"r04s7s\"\n    }\n  ]\n];\nconst Star = createLucideIcon(\"star\", __iconNode);\n\nexport { __iconNode, Star as default };\n//# sourceMappingURL=star.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M17 14V2\", key: \"8ymqnk\" }],\n  [\n    \"path\",\n    {\n      d: \"M9 18.12 10 14H4.17a2 2 0 0 1-1.92-2.56l2.33-8A2 2 0 0 1 6.5 2H20a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-2.76a2 2 0 0 0-1.79 1.11L12 22a3.13 3.13 0 0 1-3-3.88Z\",\n      key: \"m61m77\"\n    }\n  ]\n];\nconst ThumbsDown = createLucideIcon(\"thumbs-down\", __iconNode);\n\nexport { __iconNode, ThumbsDown as default };\n//# sourceMappingURL=thumbs-down.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M7 10v12\", key: \"1qc93n\" }],\n  [\n    \"path\",\n    {\n      d: \"M15 5.88 14 10h5.83a2 2 0 0 1 1.92 2.56l-2.33 8A2 2 0 0 1 17.5 22H4a2 2 0 0 1-2-2v-8a2 2 0 0 1 2-2h2.76a2 2 0 0 0 1.79-1.11L12 2a3.13 3.13 0 0 1 3 3.88Z\",\n      key: \"emmmcr\"\n    }\n  ]\n];\nconst ThumbsUp = createLucideIcon(\"thumbs-up\", __iconNode);\n\nexport { __iconNode, ThumbsUp as default };\n//# sourceMappingURL=thumbs-up.js.map\n","/**\n * @license lucide-react v0.515.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst __iconNode = [\n  [\"path\", { d: \"M18 6 6 18\", key: \"1bl5f8\" }],\n  [\"path\", { d: \"m6 6 12 12\", key: \"d8bk6v\" }]\n];\nconst X = createLucideIcon(\"x\", __iconNode);\n\nexport { __iconNode, X as default };\n//# sourceMappingURL=x.js.map\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n","import React from 'react';\nimport { createStore } from 'zustand/vanilla';\n\nconst identity = (arg) => arg;\nfunction useStore(api, selector = identity) {\n  const slice = React.useSyncExternalStore(\n    api.subscribe,\n    () => selector(api.getState()),\n    () => selector(api.getInitialState())\n  );\n  React.useDebugValue(slice);\n  return slice;\n}\nconst createImpl = (createState) => {\n  const api = createStore(createState);\n  const useBoundStore = (selector) => useStore(api, selector);\n  Object.assign(useBoundStore, api);\n  return useBoundStore;\n};\nconst create = (createState) => createState ? createImpl(createState) : createImpl;\n\nexport { create, useStore };\n","const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...args) => api.dispatch(...args), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === void 0) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst removeStoreFromTrackedConnections = (name, store) => {\n  if (store === void 0) return;\n  const connectionInfo = trackedConnections.get(name);\n  if (!connectionInfo) return;\n  delete connectionInfo.stores[store];\n  if (Object.keys(connectionInfo.stores).length === 0) {\n    trackedConnections.delete(name);\n  }\n};\nconst findCallerName = (stack) => {\n  var _a, _b;\n  if (!stack) return void 0;\n  const traceLines = stack.split(\"\\n\");\n  const apiSetStateLineIndex = traceLines.findIndex(\n    (traceLine) => traceLine.includes(\"api.setState\")\n  );\n  if (apiSetStateLineIndex < 0) return void 0;\n  const callerLine = ((_a = traceLines[apiSetStateLineIndex + 1]) == null ? void 0 : _a.trim()) || \"\";\n  return (_b = /.+ (.+) .+/.exec(callerLine)) == null ? void 0 : _b[1];\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const inferredActionType = findCallerName(new Error().stack);\n    const action = nameOrAction === void 0 ? { type: anonymousActionType || inferredActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === void 0) {\n      connection == null ? void 0 : connection.send(action, get());\n      return r;\n    }\n    connection == null ? void 0 : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  api.devtools = {\n    cleanup: () => {\n      if (connection && typeof connection.unsubscribe === \"function\") {\n        connection.unsubscribe();\n      }\n      removeStoreFromTrackedConnections(options.name, store);\n    }\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? void 0 : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? void 0 : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...args) => {\n      if ((import.meta.env ? import.meta.env.MODE : void 0) !== \"production\" && args[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...args);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === void 0) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === void 0 || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === void 0) {\n              return connection == null ? void 0 : connection.init(api.getState());\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === void 0) {\n              connection == null ? void 0 : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === void 0) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _a.state;\n            if (!lastComputedState) return;\n            if (store === void 0) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? void 0 : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, fn) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== void 0) fn(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? void 0 : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nfunction combine(initialState, create) {\n  return (...args) => Object.assign({}, initialState, create(...args));\n}\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? void 0 : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer)),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? void 0 : _b.call(options, (_a = get()) != null ? _a : configResult)) || void 0;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, void 0];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, void 0);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? void 0 : postRehydrationCallback(void 0, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? void 0 : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","import { create } from 'zustand';\r\nimport { persist } from 'zustand/middleware';\r\n\r\nconst useChatStore = create(\r\n    persist(\r\n        (set) => ({\r\n            socket: null,\r\n            sessionId: null,\r\n            messages: [],\r\n            isLoading: false,\r\n            isTyping: false,\r\n            dashboardSocket: null,\r\n            isConnected: false,\r\n            agentName: null,\r\n            isLiveChatActive: false,\r\n            lastChatState: null, // To track if user was with bot or live agent\r\n            chatEnded: false, // To track if the chat session has ended\r\n            \r\n            // Migrated states from chat-widget\r\n            isOpen: false,\r\n            widgetPosition: \"bottom-right\",\r\n            isFullscreen: false,\r\n            activeTab: \"home\",\r\n            input: \"\",\r\n            chatActive: true,\r\n            menuOpen: false,\r\n            isMobile: false,\r\n            showConfirmation: false,\r\n            showFeedback: false,\r\n            feedbackRating: null,\r\n            feedbackComment: \"\",\r\n            feedbackSatisfied: null,\r\n            unreadCount: 0,\r\n            \r\n            // Feedback submission states\r\n            isFeedbackSubmitting: false,\r\n            feedbackSubmissionStatus: null, // 'success', 'error', or null\r\n            feedbackEndpoint: 'http://localhost:5500/api/v1/feedback/public', // Default endpoint\r\n            \r\n            // Flag to track if connection error message has been shown\r\n            connectionErrorShown: false,\r\n            // Flag to track if dashboard connection error message has been shown\r\n            dashboardConnectionErrorShown: false,\r\n            // Flag to track if we're currently attempting to connect to a live agent\r\n            isConnectingToLiveAgent: false,\r\n\r\n            // Actions\r\n            setSocket: (socket) => set({ socket }),\r\n            setDashboardSocket: (dashboardSocket) => set({ dashboardSocket }),\r\n            setAgentName: (agentName) => set({ agentName }),\r\n            setIsTyping: (isTyping) => set({ isTyping }),\r\n            setIsLiveChatActive: (isLiveChatActive) => {\r\n                console.log('Setting isLiveChatActive to:', isLiveChatActive); // Debug log\r\n                set({ \r\n                    isLiveChatActive,\r\n                    lastChatState: isLiveChatActive ? 'live_agent' : 'bot'\r\n                });\r\n            },\r\n            setSessionId: (sessionId) => set({ sessionId }),\r\n            setLoading: (isLoading) => set({ isLoading }),\r\n            setConnected: (isConnected) => set({ isConnected }),\r\n            setChatEnded: (chatEnded) => set({ chatEnded }),\r\n            addMessage: (message) => set((state) => {\r\n                // Check if this is a potential duplicate message\r\n                // For bot messages, check if there's a recent identical message within the last 2 seconds\r\n                if (message.role === 'assistant') {\r\n                    const recentMessages = state.messages.filter(msg => \r\n                        msg.role === 'assistant' && \r\n                        msg.type === message.type && \r\n                        msg.content === message.content\r\n                    );\r\n                    \r\n                    if (recentMessages.length > 0) {\r\n                        // Get the most recent message timestamp\r\n                        const lastMessageTime = new Date(recentMessages[recentMessages.length - 1].timestamp).getTime();\r\n                        const currentMessageTime = new Date(message.timestamp).getTime();\r\n                        \r\n                        // If the message was received within 2 seconds, consider it a duplicate\r\n                        if (currentMessageTime - lastMessageTime < 2000) {\r\n                            console.log(' Prevented duplicate bot message:', message.content);\r\n                            return { messages: state.messages }; // Return unchanged state\r\n                        }\r\n                    }\r\n                }\r\n                \r\n                // Not a duplicate, add the message\r\n                return { messages: [...state.messages, message] };\r\n            }),\r\n            clearMessages: () => set({ messages: [] }),\r\n            \r\n            // Set connection error shown flag\r\n            setConnectionErrorShown: (shown) => set({ connectionErrorShown: shown }),\r\n            \r\n            // Reset connection error shown flag\r\n            resetConnectionErrorShown: () => set({ connectionErrorShown: false }),\r\n            \r\n            // Set dashboard connection error shown flag\r\n            setDashboardConnectionErrorShown: (shown) => set({ dashboardConnectionErrorShown: shown }),\r\n            \r\n            // Reset dashboard connection error shown flag\r\n            resetDashboardConnectionErrorShown: () => set({ dashboardConnectionErrorShown: false }),\r\n            \r\n            // Set connecting to live agent flag\r\n            setIsConnectingToLiveAgent: (isConnecting) => set({ isConnectingToLiveAgent: isConnecting }),\r\n\r\n            // Migrated actions from chat-widget\r\n            setIsOpen: (isOpen) => set((state) => {\r\n                // When opening, reset unread count\r\n                if (isOpen) {\r\n                    return { isOpen, unreadCount: 0 };\r\n                }\r\n                return { isOpen };\r\n            }),\r\n            setWidgetPosition: (widgetPosition) => set({ widgetPosition }),\r\n            setIsFullscreen: (isFullscreen) => set({ isFullscreen }),\r\n            setActiveTab: (activeTab) => set({ activeTab }),\r\n            setInput: (input) => set({ input }),\r\n            setChatActive: (chatActive) => set({ chatActive }),\r\n            setMenuOpen: (menuOpen) => set({ menuOpen }),\r\n            setIsMobile: (isMobile) => set({ isMobile }),\r\n            setShowConfirmation: (showConfirmation) => set({ showConfirmation }),\r\n            setShowFeedback: (showFeedback) => set({ showFeedback }),\r\n            setFeedbackRating: (feedbackRating) => set({ feedbackRating }),\r\n            setFeedbackComment: (feedbackComment) => set({ feedbackComment }),\r\n            setFeedbackSatisfied: (feedbackSatisfied) => set({ feedbackSatisfied }),\r\n            setUnreadCount: (unreadCount) => set({ unreadCount }),\r\n            setFeedbackEndpoint: (feedbackEndpoint) => set({ feedbackEndpoint }),\r\n            toggleWidget: () => set((state) => ({ isOpen: !state.isOpen, unreadCount: !state.isOpen ? 0 : state.unreadCount })),\r\n            toggleFullscreen: () => set((state) => ({ isFullscreen: !state.isFullscreen })),\r\n            togglePosition: () => set((state) => {\r\n                // Cycle through three positions: bottom-right -> bottom-center -> bottom-left -> bottom-right\r\n                let newPosition;\r\n                switch(state.widgetPosition) {\r\n                    case \"bottom-right\":\r\n                        newPosition = \"bottom-center\";\r\n                        break;\r\n                    case \"bottom-center\":\r\n                        newPosition = \"bottom-left\";\r\n                        break;\r\n                    case \"bottom-left\":\r\n                    default:\r\n                        newPosition = \"bottom-right\";\r\n                        break;\r\n                }\r\n                return { widgetPosition: newPosition };\r\n            }),\r\n            handleTabChange: (tab) => set({ activeTab: tab }),\r\n            updateUnreadCount: () => set((state) => {\r\n                if (!state.isOpen && state.messages.length > 1) {\r\n                    // Count messages from assistant that might be unread\r\n                    const assistantMessages = state.messages.filter((m) => m.role === \"assistant\").length;\r\n                    return { unreadCount: assistantMessages > 0 ? 1 : 0 }; // Just show 1 as indicator\r\n                } else {\r\n                    // Reset unread count when widget is open\r\n                    return { unreadCount: 0 };\r\n                }\r\n            }),\r\n            handleInputChange: (e) => set({ input: e.target.value }),\r\n            resetFeedbackState: () => set({\r\n                feedbackRating: null,\r\n                feedbackComment: \"\",\r\n                feedbackSatisfied: null,\r\n            }),\r\n            submitFeedback: () => {\r\n                const state = useChatStore.getState();\r\n                \r\n                // Set loading state\r\n                set({ isFeedbackSubmitting: true, feedbackSubmissionStatus: null });\r\n                \r\n                // Prepare feedback data for API\r\n                const feedbackData = {\r\n                    sessionId: state.sessionId || 'anonymous-session',\r\n                    rating: state.feedbackRating,\r\n                    comment: state.feedbackComment,\r\n                    satisfied: state.feedbackSatisfied\r\n                };\r\n                \r\n                // Send feedback to backend API using the configurable endpoint\r\n                fetch(state.feedbackEndpoint, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(feedbackData),\r\n                })\r\n                .then(response => {\r\n                    if (!response.ok) {\r\n                        throw new Error(`HTTP error! Status: ${response.status}`);\r\n                    }\r\n                    return response.json();\r\n                })\r\n                .then(data => {\r\n                    console.log('Feedback submitted successfully:', data);\r\n                    // Update state with success\r\n                    set((state) => ({\r\n                        isFeedbackSubmitting: false,\r\n                        feedbackSubmissionStatus: 'success',\r\n                        messages: [...state.messages, {\r\n                            id: Date.now().toString(),\r\n                            role: 'system',\r\n                            content: 'Thank you for your feedback! Your chat session has ended.',\r\n                            timestamp: new Date().toISOString(),\r\n                        }]\r\n                    }));\r\n                    \r\n                    // After showing success message for 2 seconds, complete the process\r\n                    setTimeout(() => {\r\n                        set({\r\n                            showFeedback: false,\r\n                            chatEnded: true,\r\n                            feedbackSubmissionStatus: null\r\n                        });\r\n                    }, 2000);\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error submitting feedback:', error);\r\n                    // Update state with error\r\n                    set({\r\n                        isFeedbackSubmitting: false,\r\n                        feedbackSubmissionStatus: 'error'\r\n                    });\r\n                });\r\n            },\r\n            cancelFeedback: () => set((state) => ({\r\n                showFeedback: false,\r\n                chatEnded: true,\r\n                messages: [...state.messages, {\r\n                    id: Date.now().toString(),\r\n                    role: 'system',\r\n                    content: 'You have ended the chat session.',\r\n                    timestamp: new Date().toISOString(),\r\n                }]\r\n            })),\r\n            // We'll use a callback approach to avoid direct hook usage in the store\r\n            handleConfirmEndChat: async (socketActions = null) => {\r\n                // Immediately stop typing indicator\r\n                set({ \r\n                    showConfirmation: false,\r\n                    isTyping: false,\r\n                    isLoading: false\r\n                });\r\n                \r\n                const state = useChatStore.getState();\r\n                \r\n                try {\r\n                    if (state.isLiveChatActive) {\r\n                        // If we have socket actions passed from the component, use them\r\n                        if (socketActions && socketActions.endLiveChat) {\r\n                            console.log('Ending live chat session via passed socket actions');\r\n                            await socketActions.endLiveChat();\r\n                            // The endLiveChat function will handle the rest\r\n                        } else {\r\n                            console.warn('No socket actions available, falling back to direct state update');\r\n                            // Fallback to direct state update\r\n                            if (state.dashboardSocket) {\r\n                                state.dashboardSocket.emit('endChat', { sessionId: state.sessionId });\r\n                                state.dashboardSocket.disconnect();\r\n                            }\r\n                            \r\n                            set((state) => ({\r\n                                isLiveChatActive: false,\r\n                                dashboardSocket: null,\r\n                                isConnected: false,\r\n                                agentName: null,\r\n                                lastChatState: 'bot',\r\n                                chatEnded: true,\r\n                                messages: [...state.messages, {\r\n                                    id: 'system-' + Date.now(),\r\n                                    role: 'system',\r\n                                    content: 'The chat session has ended.',\r\n                                    timestamp: new Date().toISOString(),\r\n                                }]\r\n                            }));\r\n                        }\r\n                    } else {\r\n                        // End bot chat session\r\n                        // Access the current state directly from the store\r\n                        const currentState = useChatStore.getState();\r\n                        const { socket, sessionId } = currentState;\r\n                        \r\n                        // If socket exists, send the session_end command directly\r\n                        if (socket && sessionId) {\r\n                            try {\r\n                                // If we have socket actions for ending bot chat, use them\r\n                                if (socketActions && socketActions.endBotChat) {\r\n                                    console.log('Ending bot chat session via passed socket actions');\r\n                                    await socketActions.endBotChat();\r\n                                } else {\r\n                                    // Fallback to direct socket communication\r\n                                    console.log('Ending bot chat session directly via socket');\r\n                                    await socket.emit('user_uttered', {\r\n                                        message: \"/session_end\",\r\n                                        session_id: sessionId\r\n                                    });\r\n                                }\r\n                                \r\n                                console.log('Bot chat session ended and reset');\r\n                            } catch (error) {\r\n                                console.error('Failed to end bot conversation:', error);\r\n                            }\r\n                        }\r\n                        \r\n                        // Show the feedback form regardless of whether we could end the session via socket\r\n                        set((state) => ({\r\n                            chatEnded: true,\r\n                            showFeedback: true,\r\n                        }));\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error ending chat session:', error);\r\n                    // Add error message to chat\r\n                    set((state) => ({\r\n                        messages: [...state.messages, {\r\n                            id: 'error-' + Date.now(),\r\n                            role: 'system',\r\n                            content: 'There was an error ending the chat session. Please try again.',\r\n                            timestamp: new Date().toISOString(),\r\n                        }]\r\n                    }));\r\n                }\r\n            },\r\n\r\n            // Derived action to handle complete handoff\r\n            initiateHandoff: () => set((state) => {\r\n                console.log('Initiating handoff process'); // Debug log\r\n                return {\r\n                    isLiveChatActive: true,\r\n                    isLoading: false,\r\n                    lastChatState: 'live_agent'\r\n                };\r\n            }),\r\n\r\n            startNewChat: () => set((state) => {\r\n                return {\r\n                    messages: [],\r\n                    isLiveChatActive: false,\r\n                    agentName: null,\r\n                    isLoading: false,\r\n                    isTyping: false,\r\n                    lastChatState: 'bot',\r\n                    chatEnded: false,\r\n                    menuOpen: false,\r\n                    feedbackRating: null,\r\n                    feedbackComment: \"\",\r\n                    feedbackSatisfied: null,\r\n                    chatActive: false, // Will be set to true after a short delay in the component\r\n                    connectionErrorShown: false, // Reset connection error shown flag\r\n                    dashboardConnectionErrorShown: false, // Reset dashboard connection error shown flag\r\n                };\r\n            }),\r\n\r\n            endExistingLiveChat: () => set((state) => {\r\n                if (state.dashboardSocket) {\r\n                    state.dashboardSocket.disconnect();\r\n                }\r\n                return {\r\n                    isLiveChatActive: false,\r\n                    dashboardSocket: null,\r\n                    isConnected: false,\r\n                    agentName: null,\r\n                    lastChatState: 'bot',\r\n                    chatEnded: true,\r\n                    showFeedback: true, // Show feedback form when agent ends the conversation\r\n                    messages: [...state.messages, {\r\n                        id: 'system-' + Date.now(),\r\n                        role: 'system',\r\n                        content: 'The chat session has ended. We would appreciate your feedback on this conversation.',\r\n                        timestamp: new Date().toISOString(),\r\n                    }]\r\n                };\r\n            }),\r\n        }),\r\n        {\r\n            name: 'chat-storage', // name of the item in localStorage\r\n            partialize: (state) => ({\r\n                messages: state.messages,\r\n                sessionId: state.sessionId,\r\n                isLiveChatActive: state.isLiveChatActive,\r\n                agentName: state.agentName,\r\n                lastChatState: state.lastChatState,\r\n                chatEnded: state.chatEnded,\r\n                // Add migrated states that should be persisted\r\n                isOpen: state.isOpen,\r\n                widgetPosition: state.widgetPosition,\r\n                activeTab: state.activeTab,\r\n                unreadCount: state.unreadCount,\r\n                connectionErrorShown: state.connectionErrorShown, // Persist connection error shown flag\r\n                dashboardConnectionErrorShown: state.dashboardConnectionErrorShown, // Persist dashboard connection error shown flag\r\n            }),\r\n        }\r\n    )\r\n);\r\n\r\nexport default useChatStore;","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import validate from './validate.js';\nconst byteToHex = [];\nfor (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n    return (byteToHex[arr[offset + 0]] +\n        byteToHex[arr[offset + 1]] +\n        byteToHex[arr[offset + 2]] +\n        byteToHex[arr[offset + 3]] +\n        '-' +\n        byteToHex[arr[offset + 4]] +\n        byteToHex[arr[offset + 5]] +\n        '-' +\n        byteToHex[arr[offset + 6]] +\n        byteToHex[arr[offset + 7]] +\n        '-' +\n        byteToHex[arr[offset + 8]] +\n        byteToHex[arr[offset + 9]] +\n        '-' +\n        byteToHex[arr[offset + 10]] +\n        byteToHex[arr[offset + 11]] +\n        byteToHex[arr[offset + 12]] +\n        byteToHex[arr[offset + 13]] +\n        byteToHex[arr[offset + 14]] +\n        byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n    const uuid = unsafeStringify(arr, offset);\n    if (!validate(uuid)) {\n        throw TypeError('Stringified UUID is invalid');\n    }\n    return uuid;\n}\nexport default stringify;\n","let getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n    if (!getRandomValues) {\n        if (typeof crypto === 'undefined' || !crypto.getRandomValues) {\n            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n        }\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    return getRandomValues(rnds8);\n}\n","const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default { randomUUID };\n","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n        return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random ?? options.rng?.() ?? rng();\n    if (rnds.length < 16) {\n        throw new Error('Random bytes length must be >= 16');\n    }\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n    if (buf) {\n        offset = offset || 0;\n        if (offset < 0 || offset + 16 > buf.length) {\n            throw new RangeError(`UUID byte range ${offset}:${offset + 15} is out of buffer bounds`);\n        }\n        for (let i = 0; i < 16; ++i) {\n            buf[offset + i] = rnds[i];\n        }\n        return buf;\n    }\n    return unsafeStringify(rnds);\n}\nexport default v4;\n","import React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { io } from 'socket.io-client';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport useChatStore from '../stores/chatStore';\r\n\r\n// Error types for better error handling\r\nconst ERROR_TYPES = {\r\n    CONNECTION: 'connection_error',\r\n    TIMEOUT: 'timeout_error',\r\n    SERVER: 'server_error',\r\n    NETWORK: 'network_error',\r\n    UNKNOWN: 'unknown_error'\r\n};\r\n\r\nconst SocketContext = createContext();\r\nexport const useSocket = () => useContext(SocketContext);\r\n\r\n// Default configuration values\r\nconst DEFAULT_CONFIG = {\r\n    rasaServerUrl: \"http://localhost:5005\",\r\n    socketPath: \"/socket.io\",\r\n    botMessageEvent: \"bot_uttered\",\r\n    userMessageEvent: \"user_uttered\",\r\n    dashboardServerUrl: \"http://localhost:5501\"\r\n};\r\n\r\n// Utility function to log errors and optionally report to monitoring service\r\nconst logError = (error, context = {}) => {\r\n    console.error(`[ERROR] ${context.type || 'Unknown error'}:`, error);\r\n    \r\n    // In production, you would send this to your error monitoring service\r\n    // Example: Sentry.captureException(error, { extra: context });\r\n    \r\n    // Return the error for chaining\r\n    return error;\r\n};\r\n\r\n// Utility to check if code is running in browser environment\r\nconst isBrowser = typeof window !== 'undefined';\r\n\r\nexport const SocketProvider = ({ \r\n    children, \r\n    config = {} \r\n}) => {\r\n    // Network status monitoring - default to true if not in browser\r\n    const [isOnline, setIsOnline] = useState(isBrowser ? navigator.onLine : true);\r\n    \r\n    // Merge provided config with defaults\r\n    const socketConfig = {\r\n        ...DEFAULT_CONFIG,\r\n        ...config\r\n    };\r\n    \r\n    // Maximum number of reconnection attempts\r\n    const MAX_RECONNECT_ATTEMPTS = 5;\r\n    \r\n    // Track reconnection attempts\r\n    const [reconnectAttempts, setReconnectAttempts] = useState(0);\r\n\r\n    const {\r\n        setSocket,\r\n        setSessionId,\r\n        addMessage,\r\n        setLoading,\r\n        sessionId,\r\n        socket,\r\n        setDashboardSocket,\r\n        dashboardSocket,\r\n        setConnected,\r\n        agentName,\r\n        setAgentName,\r\n        setIsTyping,\r\n        isLiveChatActive,\r\n        setIsLiveChatActive,\r\n        initiateHandoff,\r\n        startNewChat,\r\n        lastChatState,\r\n        connectionErrorShown,\r\n        setConnectionErrorShown,\r\n        resetConnectionErrorShown,\r\n        dashboardConnectionErrorShown,\r\n        setDashboardConnectionErrorShown,\r\n        resetDashboardConnectionErrorShown,\r\n    } = useChatStore();\r\n\r\n    // Monitor network status changes\r\n    useEffect(() => {\r\n        // Skip if not in browser environment\r\n        if (!isBrowser) return;\r\n        \r\n        const handleOnline = () => {\r\n            console.log('🌐 Network connection restored');\r\n            setIsOnline(true);\r\n            \r\n            // Attempt to reconnect sockets when network comes back online\r\n            if (sessionId) {\r\n                // Reset reconnection attempts\r\n                setReconnectAttempts(0);\r\n                \r\n                // Try to reconnect to appropriate services based on last state\r\n                const currentState = useChatStore.getState();\r\n                if (currentState.lastChatState === 'live_agent') {\r\n                    connectToDashboard();\r\n                } else {\r\n                    // Socket will auto-reconnect if configured with reconnection: true\r\n                }\r\n                \r\n                // Notify user that we're reconnecting\r\n                useChatStore.getState().addMessage({\r\n                    id: 'network-reconnect-' + Date.now(),\r\n                    role: 'system',\r\n                    content: 'Network connection restored. Reconnecting...',\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n            }\r\n        };\r\n        \r\n        const handleOffline = () => {\r\n            console.log('🔌 Network connection lost');\r\n            setIsOnline(false);\r\n            \r\n            // Notify user about network issues\r\n            useChatStore.getState().addMessage({\r\n                id: 'network-offline-' + Date.now(),\r\n                role: 'system',\r\n                content: 'Network connection lost. Messages may not be delivered until connection is restored.',\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n        };\r\n        \r\n        // Add event listeners for online/offline status\r\n        window.addEventListener('online', handleOnline);\r\n        window.addEventListener('offline', handleOffline);\r\n        \r\n        // Clean up event listeners on unmount\r\n        return () => {\r\n            window.removeEventListener('online', handleOnline);\r\n            window.removeEventListener('offline', handleOffline);\r\n        };\r\n    }, [sessionId]);\r\n\r\n    useEffect(() => {\r\n        // Skip if not in browser environment\r\n        if (!isBrowser) return;\r\n        \r\n        try {\r\n            let storedSessionId = localStorage.getItem(\"rasaSessionId\");\r\n            if (!storedSessionId) {\r\n                storedSessionId = uuidv4();\r\n                localStorage.setItem(\"rasaSessionId\", storedSessionId);\r\n            }\r\n            setSessionId(storedSessionId);\r\n        } catch (error) {\r\n            // Handle localStorage access errors (e.g., private browsing mode)\r\n            logError(error, { type: ERROR_TYPES.UNKNOWN, context: 'sessionId-initialization' });\r\n            \r\n            // Fallback to in-memory session ID\r\n            const fallbackSessionId = uuidv4();\r\n            setSessionId(fallbackSessionId);\r\n            \r\n            console.warn('Using fallback in-memory session ID due to localStorage access error');\r\n        }\r\n    }, [setSessionId]);\r\n\r\n    // Reconnect to appropriate server on page reload based on last chat state\r\n    useEffect(() => {\r\n        const reconnectBasedOnState = async () => {\r\n            // If there was an active session before reload\r\n            if (lastChatState) {\r\n                if (lastChatState === 'live_agent') {\r\n                    // If user was chatting with a live agent, just reconnect without showing a message\r\n                    // We'll show a single \"Connected to live agent\" message in the connectToDashboard function\r\n                    await connectToDashboard();\r\n                } else {\r\n                    // If user was chatting with the bot, just reconnect without showing a message\r\n                    // We'll handle the connection message in the socket connection\r\n                }\r\n            }\r\n        };\r\n\r\n        // Only run this effect when the component mounts (on page load)\r\n        if (sessionId && !socket) {\r\n            reconnectBasedOnState();\r\n        }\r\n    }, [sessionId, isOnline, socketConfig, socket]);\r\n\r\n    const connectToDashboard = (agentName) => {\r\n        // Skip if not in browser\r\n        if (!isBrowser) {\r\n            console.warn('Cannot connect to dashboard: Not in browser environment');\r\n            return;\r\n        }\r\n        \r\n        if (!sessionId) {\r\n            console.warn('Cannot connect to dashboard: No session ID available');\r\n            return;\r\n        }\r\n\r\n        if (!isOnline) {\r\n            console.warn('Cannot connect to dashboard: Network is offline');\r\n            useChatStore.getState().addMessage({\r\n                id: 'network-offline-dashboard-' + Date.now(),\r\n                role: 'system',\r\n                content: 'Cannot connect to live agent while offline. Please check your internet connection.',\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n            return;\r\n        }\r\n\r\n        // Use getState() to get fresh values\r\n        const currentState = useChatStore.getState();\r\n\r\n        if (currentState.dashboardSocket?.connected) {\r\n            console.log('Dashboard connection already established');\r\n            return;\r\n        }\r\n        \r\n        // Set the connecting flag to true to disable the input box\r\n        useChatStore.getState().setIsConnectingToLiveAgent(true);\r\n\r\n        // Implement connection timeout\r\n        let connectionTimeoutId;\r\n\r\n        try {\r\n            console.log('🔌 Establishing new dashboard connection...');\r\n            const dashboardSocketConnection = io(socketConfig.dashboardServerUrl, {\r\n                reconnection: true,\r\n                reconnectionAttempts: 3, // Reduce attempts to fit within 10 seconds\r\n                reconnectionDelay: 1000, // Start with 1 second delay\r\n                reconnectionDelayMax: 3000, // Maximum delay of 3 seconds\r\n                timeout: 10000, // 10 second timeout to match our threshold\r\n            });\r\n            \r\n            // Connection established handler\r\n            dashboardSocketConnection.on('connect', () => {\r\n            console.log('✅ Dashboard connection successful');\r\n            useChatStore.getState().setDashboardSocket(dashboardSocketConnection);\r\n            useChatStore.getState().setConnected(true);\r\n            useChatStore.getState().setIsLiveChatActive(true);\r\n            \r\n            // Reset the connecting flag when connection succeeds\r\n            useChatStore.getState().setIsConnectingToLiveAgent(false);\r\n            \r\n            // Reset the dashboard connection error shown flag when we successfully connect\r\n            useChatStore.getState().resetDashboardConnectionErrorShown();\r\n\r\n            // Register with the dashboard\r\n            dashboardSocketConnection.emit('register', {\r\n                role: 'user',\r\n                sessionId: currentState.sessionId\r\n            });\r\n\r\n            // Show a simple \"Connected to live agent\" message if there isn't already one\r\n            if (!currentState.messages.some(msg => \r\n                msg.role === 'system' && \r\n                msg.content.includes('Connected to live agent')\r\n            )) {\r\n                addMessage({\r\n                    id: 'agent-connect-' + Date.now(),\r\n                    role: 'system',\r\n                    content: 'Connected to live agent.',\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n            }\r\n        });\r\n\r\n        // Add agent typing event handler\r\n        dashboardSocketConnection.on('agentTyping', ({sessionId}) => {\r\n            console.log('👨‍💼 Agent is typing...');\r\n            useChatStore.getState().setIsTyping(true);\r\n            \r\n            // Auto-reset typing indicator after a timeout (in case the stop typing event is missed)\r\n            setAgentName(agentName);\r\n            addMessage({\r\n                id: 'agent-joined-' + Date.now(),\r\n                role: 'system',\r\n                content: `${agentName} has joined the conversation`,\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n        });\r\n\r\n        // Set timeout for connection - this is a backup in case socket.io's own timeout doesn't trigger\r\n        const connectionTimeout = setTimeout(() => {\r\n            if (!dashboardSocketConnection.connected) {\r\n                console.warn('⌛ Dashboard connection timeout');\r\n                // Force disconnect after our 10-second threshold\r\n                dashboardSocketConnection.disconnect();\r\n                setIsLiveChatActive(false);\r\n                setConnected(false);\r\n                \r\n                // Reset the connecting flag since we're forcing a disconnect\r\n                useChatStore.getState().setIsConnectingToLiveAgent(false);\r\n                \r\n                // Add message about connection timeout\r\n                addMessage({\r\n                    id: 'timeout-error-' + Date.now(),\r\n                    role: 'system',\r\n                    content: 'Connection to live agent timed out after multiple attempts.',\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n                \r\n                // End the chat session after the timeout\r\n                setTimeout(() => {\r\n                    useChatStore.getState().setChatEnded(true);\r\n                    useChatStore.getState().addMessage({\r\n                        id: 'system-' + Date.now(),\r\n                        role: 'system',\r\n                        content: 'The chat session has ended.',\r\n                        timestamp: new Date().toISOString(),\r\n                    });\r\n                }, 2000); // Wait 2 seconds before ending the chat\r\n            }\r\n        }, 10000); // 10 second timeout to match our threshold\r\n\r\n        // Cleanup on successful connection\r\n        dashboardSocketConnection.on('connect', () => {\r\n            clearTimeout(connectionTimeout);\r\n        });\r\n\r\n        dashboardSocketConnection.on('agentMessage', (agentMessage) => {\r\n            console.log(\"Received agent message:\", agentMessage);\r\n            setIsTyping(false);\r\n            addMessage({\r\n                id: uuidv4(),\r\n                role: 'agent',\r\n                type: 'text',\r\n                content: agentMessage.text,\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n        });\r\n\r\n        // Handle when an agent ends the conversation (legacy event)\r\n        dashboardSocketConnection.on('conversationEnded', (data) => {\r\n            console.log('Agent ended the conversation (conversationEnded):', data);\r\n            \r\n            // Add message to notify the user\r\n            addMessage({\r\n                id: 'conversation-ended-' + Date.now(),\r\n                role: 'system',\r\n                content: data.message || 'The agent has ended this conversation.',\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n            \r\n            // End the live chat session\r\n            useChatStore.getState().endExistingLiveChat();\r\n        });\r\n        \r\n        // Handle the new endConversation event from dashboard\r\n        dashboardSocketConnection.on('endConversation', (data) => {\r\n            console.log('Agent ended the conversation (endConversation):', data);\r\n            \r\n            // Add message to notify the user\r\n            addMessage({\r\n                id: 'conversation-ended-' + Date.now(),\r\n                role: 'system',\r\n                content: 'The agent has ended this conversation.',\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n            \r\n            // End the live chat session\r\n            useChatStore.getState().endExistingLiveChat();\r\n        });\r\n\r\n        dashboardSocketConnection.on('disconnect', () => {\r\n            console.log('Disconnected from dashboard server');\r\n            // useChatStore.getState().endLiveChat();\r\n        });\r\n        \r\n        // Handle connection errors\r\n        dashboardSocketConnection.on('connect_error', (error) => {\r\n            console.error('❌ Dashboard connection failed:', error);\r\n            setIsLiveChatActive(false);\r\n            setConnected(false);\r\n            \r\n            // Only add the message if we haven't shown it yet\r\n            const { dashboardConnectionErrorShown, setDashboardConnectionErrorShown } = useChatStore.getState();\r\n            \r\n            if (!dashboardConnectionErrorShown) {\r\n                // Add message about connection failure\r\n                addMessage({\r\n                    id: 'connect-error-' + Date.now(),\r\n                    role: 'system',\r\n                    content: 'Failed to connect to live agent. Attempting to reconnect...',\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n                \r\n                setDashboardConnectionErrorShown(true);\r\n            }\r\n            // Note: We don't reset isConnectingToLiveAgent here as we're still attempting to reconnect\r\n        });\r\n        \r\n        // Handle when all reconnection attempts fail\r\n        dashboardSocketConnection.on('reconnect_failed', () => {\r\n            console.error('❌ All dashboard reconnection attempts failed');\r\n            \r\n            // Reset the connecting flag when all reconnection attempts fail\r\n            useChatStore.getState().setIsConnectingToLiveAgent(false);\r\n            \r\n            // Always show the reconnection failure message\r\n            addMessage({\r\n                id: 'reconnect-failed-' + Date.now(),\r\n                role: 'system',\r\n                content: 'Failed to connect to live agent after multiple attempts.',\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n            \r\n            // Automatically end the chat after displaying the error message\r\n            setTimeout(() => {\r\n                // End the chat session\r\n                useChatStore.getState().setChatEnded(true);\r\n                useChatStore.getState().addMessage({\r\n                    id: 'system-' + Date.now(),\r\n                    role: 'system',\r\n                    content: 'The chat session has ended.',\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n            }, 2000); // Wait 2 seconds before ending the chat\r\n        });\r\n\r\n        setDashboardSocket(dashboardSocketConnection);\r\n        \r\n        } catch (error) {\r\n            logError(error, { type: ERROR_TYPES.CONNECTION, context: 'dashboard-connection' });\r\n            \r\n            // Notify user about connection issues\r\n            useChatStore.getState().addMessage({\r\n                id: 'connection-error-' + Date.now(),\r\n                role: 'system',\r\n                content: 'Failed to connect to live agent server. Please try again later.',\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n            \r\n            // Update UI state\r\n            setIsLiveChatActive(false);\r\n            setConnected(false);\r\n            setDashboardConnectionErrorShown(true);\r\n        }\r\n    };\r\n\r\n    const disconnectFromDashboard = () => {\r\n        if (dashboardSocket) {\r\n            dashboardSocket.disconnect();\r\n            setDashboardSocket(null);\r\n            setIsLiveChatActive(false);\r\n            setConnected(false);\r\n            console.log('Manually disconnected from Dashboard');\r\n        }\r\n    };\r\n\r\n    // In your component or chat context\r\n    const startChat = () => {\r\n        // Generate new session ID\r\n        const newSessionId = uuidv4();\r\n        localStorage.setItem(\"rasaSessionId\", newSessionId);\r\n        \r\n        // Clear previous chat\r\n        startNewChat();\r\n        \r\n        // Reset chat ended flag\r\n        useChatStore.getState().setChatEnded(false);\r\n\r\n        // Get current socket state\r\n        const { socket } = useChatStore.getState();\r\n        \r\n        // If there's an existing socket, disconnect it first\r\n        if (socket) {\r\n            console.log('Disconnecting existing socket before starting new chat');\r\n            \r\n            // Remove all socket listeners to prevent any further updates\r\n            socket.off(socketConfig.botMessageEvent);\r\n            socket.off('typing');\r\n            socket.off('connect');\r\n            socket.off('disconnect');\r\n            socket.off('connect_error');\r\n            socket.off('reconnect_attempt');\r\n            socket.off('reconnect_failed');\r\n            \r\n            // Disconnect the socket\r\n            if (socket.connected) {\r\n                socket.disconnect();\r\n            }\r\n            \r\n            // Set socket to null to force a new connection\r\n            setSocket(null);\r\n        }\r\n        \r\n        // Set the new session ID\r\n        setSessionId(newSessionId);\r\n        \r\n        // Create a new socket connection with the new session ID\r\n        console.log('Creating new socket connection with session ID:', newSessionId);\r\n        const socketConnection = io(socketConfig.rasaServerUrl, {\r\n            path: socketConfig.socketPath,\r\n            transports: ['websocket'],\r\n            query: { session_id: newSessionId },\r\n            reconnection: true,\r\n            reconnectionAttempts: MAX_RECONNECT_ATTEMPTS,\r\n            reconnectionDelay: 2000,\r\n            reconnectionDelayMax: 10000,\r\n            timeout: 20000,\r\n            autoConnect: true,\r\n            forceNew: true, // Ensure we create a new connection\r\n        });\r\n        \r\n        // Set up event handlers for the new socket\r\n        socketConnection.on('connect', () => {\r\n            console.log('✅ Connected to Rasa server with new session');\r\n            \r\n            // Set the socket in the store\r\n            setSocket(socketConnection);\r\n            \r\n            // First send session_request to establish the connection\r\n            socketConnection.emit('session_request', { session_id: newSessionId });\r\n            \r\n            // Add a small delay before sending the first message to prevent race conditions\r\n            setTimeout(() => {\r\n                // Then explicitly send a restart command to Rasa\r\n                console.log('Sending restart command to Rasa');\r\n                socketConnection.emit(socketConfig.userMessageEvent, {\r\n                    message: \"/restart\",\r\n                    session_id: newSessionId\r\n                });\r\n                \r\n                // Add another small delay before sending the session_start command\r\n                setTimeout(() => {\r\n                    // Then start a new session\r\n                    console.log('Sending session_start command to Rasa');\r\n                    socketConnection.emit(socketConfig.userMessageEvent, {\r\n                        message: \"/session_start\",\r\n                        session_id: newSessionId\r\n                    });\r\n                    \r\n                    // We don't need to add a connection message here as it will be added by the useEffect hook\r\n                    // when the socket connects\r\n                }, 300); // 300ms delay before session_start\r\n            }, 500); // 500ms delay before first command\r\n        });\r\n        \r\n        // Set up other event handlers\r\n        socketConnection.on('disconnect', (reason) => {\r\n            console.warn(\"⚠️ Disconnected from Rasa:\", reason);\r\n        });\r\n        \r\n        socketConnection.on(\"connect_error\", (error) => {\r\n            console.error(\"❌ Connection Error:\", error.message);\r\n            \r\n            // Only add the message if we haven't shown it yet\r\n            const { connectionErrorShown, setConnectionErrorShown } = useChatStore.getState();\r\n            \r\n            if (!connectionErrorShown) {\r\n                // Add the message and set the flag\r\n                useChatStore.getState().addMessage({\r\n                    id: 'error-' + Date.now(),\r\n                    role: 'system',\r\n                    content: 'Unable to reach chat server. Retrying...',\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n                \r\n                setConnectionErrorShown(true);\r\n            }\r\n        });\r\n        \r\n        // Set up bot message handler\r\n        socketConnection.on(socketConfig.botMessageEvent, (botResponse) => {\r\n            setLoading(false);\r\n            const idBase = uuidv4();\r\n\r\n            console.log('Full bot response received:', botResponse);\r\n            \r\n            // Process bot response (simplified version)\r\n            if (botResponse.text) {\r\n                addMessage({\r\n                    id: idBase,\r\n                    role: 'assistant',\r\n                    type: 'text',\r\n                    content: botResponse.text,\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n            }\r\n        });\r\n        \r\n        // Connect the socket\r\n        socketConnection.connect();\r\n    };\r\n\r\n    // In your component or chat context\r\n    const endLiveChat = async () => {\r\n        const { endExistingLiveChat, socket, sessionId } = useChatStore.getState();\r\n\r\n        // 1. Notify dashboard server\r\n        if (dashboardSocket?.connected) {\r\n            dashboardSocket.emit('endChat', { sessionId });\r\n        }\r\n\r\n        // 2. Update local state\r\n        endExistingLiveChat();\r\n\r\n        // 3. Restart conversation with bot\r\n        if (socket && sessionId) {\r\n            try {\r\n                // Send restart command\r\n                await socket.emit(socketConfig.userMessageEvent, {\r\n                    message: \"/restart\",\r\n                    session_id: sessionId\r\n                });\r\n\r\n            } catch (error) {\r\n                console.error('Failed to restart conversation:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    // End bot chat session with Rasa\r\n    const endBotChat = async () => {\r\n        // Force immediate update of all relevant state\r\n        useChatStore.setState({\r\n            isTyping: false,\r\n            isLoading: false\r\n        });\r\n        \r\n        const { socket, sessionId } = useChatStore.getState();\r\n        \r\n        if (socket && sessionId) {\r\n            try {\r\n                // First, try to send the session_end command directly if socket is connected\r\n                // This ensures Rasa knows the session has ended\r\n                if (socket.connected) {\r\n                    console.log('Sending session_end command to Rasa before disconnecting');\r\n                    socket.emit(socketConfig.userMessageEvent, {\r\n                        message: \"/session_end\",\r\n                        session_id: sessionId\r\n                    });\r\n                }\r\n                \r\n                // Remove all socket listeners to prevent any further updates\r\n                socket.off(socketConfig.botMessageEvent);\r\n                socket.off('typing');\r\n                \r\n                // Forcefully disconnect the socket to terminate any ongoing bot replies\r\n                console.log('Forcefully disconnecting socket to terminate ongoing bot replies');\r\n                socket.disconnect();\r\n                \r\n                // Set a flag to indicate the chat has been ended\r\n                useChatStore.getState().setChatEnded(true);\r\n                console.log('Bot chat session ended and reset');\r\n                \r\n                // Don't automatically reconnect - we'll reconnect with a new session when startChat is called\r\n            } catch (error) {\r\n                console.error('Failed to end bot conversation:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // Skip if not in browser environment\r\n        if (!isBrowser) return;\r\n        \r\n        if (!sessionId) return;\r\n        \r\n        // Don't attempt connection if we're offline\r\n        if (!isOnline) {\r\n            console.warn('Not connecting to Rasa server: Network is offline');\r\n            return;\r\n        }\r\n        \r\n        // Check if we already have an active socket connection\r\n        if (socket && socket.connected) {\r\n            console.log('🔄 Using existing socket connection');\r\n            return;\r\n        }\r\n        \r\n        let socketConnection;\r\n        \r\n        try {\r\n            socketConnection = io(socketConfig.rasaServerUrl, {\r\n                path: socketConfig.socketPath,\r\n                transports: ['websocket'],\r\n                query: { session_id: sessionId },\r\n                reconnection: true,\r\n                reconnectionAttempts: MAX_RECONNECT_ATTEMPTS,\r\n                reconnectionDelay: 2000,\r\n                reconnectionDelayMax: 10000,\r\n                timeout: 20000,\r\n                // Add additional error handling options\r\n                autoConnect: true,\r\n                forceNew: true, // Ensure we create a new connection\r\n            });\r\n            \r\n            socketConnection.on('connect', () => {\r\n            console.log('✅ Connected to Rasa server');\r\n            \r\n            // Reset the connection error shown flag when we successfully connect\r\n            useChatStore.getState().resetConnectionErrorShown();\r\n            \r\n            // Set the socket in the store\r\n            setSocket(socketConnection);\r\n            \r\n            // If we have a session ID, use it, otherwise create a new one\r\n            const sessionId = useChatStore.getState().sessionId || uuidv4();\r\n            setSessionId(sessionId);\r\n            \r\n            console.log(`📝 Session ID: ${sessionId}`);\r\n            \r\n            // Send session request to the server\r\n            socketConnection.emit('session_request', { session_id: sessionId });\r\n            \r\n            // Check if this is a reconnection after page reload\r\n            const currentState = useChatStore.getState();\r\n\r\n            // Only show connection message if not in live agent mode and if there isn't already one\r\n            if (currentState.lastChatState !== 'live_agent' && \r\n                !currentState.messages.some(msg => \r\n                    msg.role === 'system' && \r\n                    msg.content.includes('Connected to chat server')\r\n                )) {\r\n                addMessage({\r\n                    id: 'system-' + Date.now(),\r\n                    role: 'system',\r\n                    content: 'Connected to chat server.',\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n            }\r\n        });\r\n\r\n        socketConnection.on('disconnect', (reason) => {\r\n            console.warn(\"⚠️ Disconnected from Rasa:\", reason);\r\n            if (reason === \"io server disconnect\") {\r\n                socketConnection.connect();\r\n            }\r\n            // Don't start a new chat on disconnect to preserve messages\r\n            // useChatStore.getState().startNewChat();\r\n        });\r\n\r\n        socketConnection.on(\"connect_error\", (error) => {\r\n            console.error(\"❌ Connection Error:\", error.message);\r\n            \r\n            // Only add the message if we haven't shown it yet\r\n            const { connectionErrorShown, setConnectionErrorShown } = useChatStore.getState();\r\n            \r\n            if (!connectionErrorShown) {\r\n                // Add the message and set the flag\r\n                useChatStore.getState().addMessage({\r\n                    id: 'error-' + Date.now(),\r\n                    role: 'system',\r\n                    content: 'Unable to reach chat server. Retrying...',\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n                \r\n                setConnectionErrorShown(true);\r\n            }\r\n        });\r\n\r\n        socketConnection.on(\"reconnect_attempt\", (attempt) => {\r\n            console.log(`🔁 Reconnect attempt #${attempt}`);\r\n        });\r\n\r\n        socketConnection.on(\"reconnect_failed\", () => {\r\n            console.error(\"❌ Reconnection failed. Giving up.\");\r\n            useChatStore.getState().addMessage({\r\n                id: 'system-fail-' + Date.now(),\r\n                role: 'system',\r\n                content: 'Failed to reconnect to chat server. Please refresh the page.',\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n        });\r\n\r\n        socketConnection.on(socketConfig.botMessageEvent, (botResponse) => {\r\n            setLoading(false);\r\n            const idBase = uuidv4();\r\n\r\n            console.log('Full bot response received:', botResponse); // Detailed logging\r\n            // Handle resume responses\r\n\r\n            // Enhanced handoff detection - checks multiple possible formats\r\n            if (botResponse.handoff === true) {\r\n                // Use getState() to get fresh values\r\n                const currentState = useChatStore.getState();\r\n\r\n                console.log('🚀 HANDOFF TRIGGERED - Starting handoff process');\r\n\r\n                // Set state and connect in sequence\r\n                useChatStore.getState().setIsLiveChatActive(true);\r\n\r\n                // Add slight delay to ensure state updates\r\n                setTimeout(() => {\r\n                    connectToDashboard();\r\n\r\n                    // Add handoff message to chat\r\n                    if (botResponse.message || botResponse.text) {\r\n                        addMessage({\r\n                            id: idBase,\r\n                            role: 'assistant',\r\n                            type: 'text',\r\n                            content: botResponse.message || botResponse.text,\r\n                            timestamp: new Date().toISOString(),\r\n                        });\r\n                    }\r\n\r\n                    // Don't add a \"Connected to live agent\" message here\r\n                    // as it will be added by the connectToDashboard function\r\n\r\n                }, 50);\r\n\r\n                return;\r\n            }\r\n\r\n\r\n            // Normal bot message processing\r\n            if (botResponse.text) {\r\n                addMessage({\r\n                    id: idBase,\r\n                    role: 'assistant',\r\n                    type: 'text',\r\n                    content: botResponse.text,\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n            }\r\n\r\n            if (botResponse.buttons || botResponse.quick_replies) {\r\n                const buttons = botResponse.buttons || botResponse.quick_replies;\r\n                addMessage({\r\n                    id: idBase + '-buttons',\r\n                    role: 'assistant',\r\n                    type: 'buttons',\r\n                    payload: buttons.map(btn => ({\r\n                        title: btn.title || btn.text,\r\n                        payload: btn.payload || btn.title || btn.text\r\n                    })),\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n            }\r\n\r\n            if (botResponse.image) {\r\n                addMessage({\r\n                    id: idBase + '-image',\r\n                    role: 'assistant',\r\n                    type: 'image',\r\n                    content: botResponse.image,\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n            }\r\n\r\n            if (botResponse.custom) {\r\n                addMessage({\r\n                    id: idBase + '-custom',\r\n                    role: 'assistant',\r\n                    type: 'custom',\r\n                    payload: botResponse.custom,\r\n                });\r\n            }\r\n        });\r\n\r\n        socketConnection.on(socketConfig.userMessageEvent, (userMessage) => {\r\n            console.log(\"📨 Received user message:\", userMessage);\r\n            addMessage({\r\n                id: uuidv4(),\r\n                role: 'user',\r\n                type: 'text',\r\n                content: userMessage.text,\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n        });\r\n\r\n        setSocket(socketConnection);\r\n\r\n        return () => {\r\n            // Clean up socket on unmount\r\n            if (socketConnection) {\r\n                console.log('🧹 Cleaning up socket connection');\r\n                socketConnection.off(socketConfig.botMessageEvent);\r\n                socketConnection.off(socketConfig.userMessageEvent);\r\n                socketConnection.off('connect');\r\n                socketConnection.off('disconnect');\r\n                socketConnection.off('connect_error');\r\n                socketConnection.off('reconnect_attempt');\r\n                socketConnection.off('reconnect_failed');\r\n                socketConnection.disconnect();\r\n            }\r\n        };\r\n        \r\n        } catch (error) {\r\n            // Log the error with context\r\n            logError(error, { type: ERROR_TYPES.CONNECTION, context: 'rasa-server-connection' });\r\n            \r\n            // Notify user about connection issues if not already shown\r\n            if (!connectionErrorShown) {\r\n                useChatStore.getState().addMessage({\r\n                    id: 'rasa-error-' + Date.now(),\r\n                    role: 'system',\r\n                    content: 'Unable to connect to chat server. Please check your internet connection or try again later.',\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n                \r\n                setConnectionErrorShown(true);\r\n            }\r\n            \r\n            // Increment reconnection attempts\r\n            setReconnectAttempts(prev => prev + 1);\r\n            \r\n            // If we've exceeded max reconnection attempts, show a more permanent error\r\n            if (reconnectAttempts >= MAX_RECONNECT_ATTEMPTS) {\r\n                useChatStore.getState().addMessage({\r\n                    id: 'rasa-max-attempts-' + Date.now(),\r\n                    role: 'system',\r\n                    content: 'Unable to establish a connection after multiple attempts. Please refresh the page or try again later.',\r\n                    timestamp: new Date().toISOString(),\r\n                });\r\n            }\r\n        }\r\n    }, [sessionId, setSocket, addMessage, setLoading, isOnline, connectionErrorShown, reconnectAttempts]);\r\n\r\n    // Enhanced message sending with error handling\r\n    const sendMessage = async (message) => {\r\n        // Skip if not in browser environment\r\n        if (!isBrowser) {\r\n            console.warn('Cannot send message: Not in browser environment');\r\n            return false;\r\n        }\r\n        \r\n        if (!isOnline) {\r\n            // Handle offline state\r\n            console.warn('Cannot send message while offline');\r\n            useChatStore.getState().addMessage({\r\n                id: 'offline-warning-' + Date.now(),\r\n                role: 'system',\r\n                content: 'Message could not be sent. You appear to be offline.',\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n            return false;\r\n        }\r\n        \r\n        const { socket, dashboardSocket, sessionId, isLiveChatActive } = useChatStore.getState();\r\n        \r\n        try {\r\n            if (isLiveChatActive && dashboardSocket?.connected) {\r\n                // Send to live agent\r\n                dashboardSocket.emit('userMessage', {\r\n                    text: message,\r\n                    sessionId: sessionId\r\n                });\r\n                return true;\r\n            } else if (socket?.connected) {\r\n                // Send to bot\r\n                socket.emit(socketConfig.userMessageEvent, {\r\n                    message: message,\r\n                    session_id: sessionId\r\n                });\r\n                return true;\r\n            } else {\r\n                throw new Error('No active connection available');\r\n            }\r\n        } catch (error) {\r\n            logError(error, { \r\n                type: ERROR_TYPES.CONNECTION, \r\n                context: 'message-sending',\r\n                message: message\r\n            });\r\n            \r\n            // Add error message to chat\r\n            useChatStore.getState().addMessage({\r\n                id: 'send-error-' + Date.now(),\r\n                role: 'system',\r\n                content: 'Message could not be delivered. Please check your connection and try again.',\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n            \r\n            return false;\r\n        }\r\n    };\r\n    \r\n    // Function to handle unexpected errors\r\n    const handleUnexpectedError = (error, context = {}) => {\r\n        logError(error, { type: ERROR_TYPES.UNKNOWN, ...context });\r\n        \r\n        // Add user-friendly error message\r\n        useChatStore.getState().addMessage({\r\n            id: 'unexpected-error-' + Date.now(),\r\n            role: 'system',\r\n            content: 'Something went wrong. Please try again or refresh the page if the problem persists.',\r\n            timestamp: new Date().toISOString(),\r\n        });\r\n    };\r\n\r\n    return (\r\n        <SocketContext.Provider value={{\r\n            connectToDashboard,\r\n            disconnectFromDashboard,\r\n            startChat,\r\n            endLiveChat,\r\n            endBotChat,\r\n            isLiveChatActive,\r\n            sendMessage,\r\n            handleUnexpectedError,\r\n            isOnline\r\n        }}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    );\r\n};","import useChatStore from '../stores/chatStore';\r\nimport { useSocket } from '../context/SocketContext';\r\n\r\nexport const useSendMessage = () => {\r\n    const { socket, sessionId, addMessage, setLoading, setIsTyping, dashboardSocket, isLiveChatActive } = useChatStore.getState();\r\n    const socketContext = useSocket();\r\n    \r\n    // Make sure we have access to socketConfig\r\n    const socketConfig = socketContext?.socketConfig || {\r\n        userMessageEvent: 'user_uttered',  // Fallback to default value\r\n        botMessageEvent: 'bot_uttered'\r\n    };\r\n\r\n    const sendMessage = (text) => {\r\n        if (!socket || !socket.connected) {\r\n            addMessage({\r\n                id: 'error-' + Date.now(),\r\n                role: 'system',\r\n                content: 'Not connected to the chat server.',\r\n                timestamp: new Date().toISOString(),\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!text.trim()) return;\r\n\r\n        if (isLiveChatActive) {\r\n            console.warn('Live chat expected but no connection - falling back to bot');\r\n            addMessage({\r\n                id: 'error-' + Date.now(),\r\n                role: 'system',\r\n                content: 'Temporarily sending to bot while connecting to agent...'\r\n            });\r\n        }\r\n        const userMessage = {\r\n            id: 'user-' + Date.now(),\r\n            role: 'user',\r\n            type: 'text',\r\n            content: text.trim(),\r\n            timestamp: new Date().toISOString(),\r\n        };\r\n\r\n        addMessage(userMessage);\r\n        setLoading(true);\r\n\r\n        // Make sure we have the event name before emitting\r\n        const eventName = socketConfig?.userMessageEvent || 'user_uttered';\r\n        \r\n        socket.emit(eventName, {\r\n            message: text.trim(),\r\n            session_id: sessionId,\r\n        });\r\n    };\r\n\r\n    const sendMessageToDashboard = (text) => {\r\n        if (!text.trim()) return;\r\n\r\n        const userMessage = {\r\n            id: 'user-' + Date.now(),\r\n            role: 'user',\r\n            type: 'text',\r\n            content: text.trim(),\r\n            timestamp: new Date().toISOString(),\r\n        };\r\n\r\n        addMessage(userMessage);\r\n        // setLoading(true);\r\n\r\n        dashboardSocket.emit('userMessage', {\r\n            sessionId: sessionId,\r\n            text: text.trim(),\r\n        });\r\n        console.log('input from usesendmsg is: ', text.trim());\r\n\r\n    };\r\n\r\n    return { sendMessage, sendMessageToDashboard };\r\n};\r\n\r\nexport default useSendMessage;\r\n","import React, { useRef, useEffect } from \"react\"\r\nimport {\r\n    GraduationCap,\r\n    MoreVertical,\r\n    X,\r\n    Send,\r\n    Star,\r\n    ThumbsUp,\r\n    ThumbsDown,\r\n    Home,\r\n    MessageCircle,\r\n    PlusCircle,\r\n    ChevronRight,\r\n    BookOpen,\r\n    Calendar,\r\n    HelpCircle,\r\n    ExternalLink,\r\n    Maximize2,\r\n    Minimize2,\r\n} from \"lucide-react\"\r\nimport useChatStore from '../stores/chatStore'\r\nimport {useSendMessage} from '../hooks/useSendMessage'\r\nimport {useSocket} from '../context/SocketContext'\r\n\r\nexport default function ChatWidget() {\r\n    // Get all states and actions from the chatStore\r\n    const { \r\n        // Original states\r\n        messages, \r\n        isLoading, \r\n        addMessage, \r\n        clearMessages, \r\n        isTyping, \r\n        isLiveChatActive, \r\n        agentName, \r\n        lastChatState, \r\n        chatEnded, \r\n        setChatEnded,\r\n        isConnectingToLiveAgent,\r\n        \r\n        // Migrated states\r\n        isOpen,\r\n        setIsOpen,\r\n        widgetPosition,\r\n        setWidgetPosition,\r\n        isFullscreen,\r\n        setIsFullscreen,\r\n        activeTab,\r\n        setActiveTab,\r\n        input,\r\n        setInput,\r\n        chatActive,\r\n        setChatActive,\r\n        menuOpen,\r\n        setMenuOpen,\r\n        isMobile,\r\n        setIsMobile,\r\n        showConfirmation,\r\n        setShowConfirmation,\r\n        showFeedback,\r\n        setShowFeedback,\r\n        feedbackRating,\r\n        setFeedbackRating,\r\n        feedbackComment,\r\n        setFeedbackComment,\r\n        feedbackSatisfied,\r\n        setFeedbackSatisfied,\r\n        unreadCount,\r\n        setUnreadCount,\r\n        \r\n        // Feedback submission states\r\n        isFeedbackSubmitting,\r\n        feedbackSubmissionStatus,\r\n        \r\n        // Migrated actions\r\n        toggleWidget,\r\n        toggleFullscreen,\r\n        togglePosition,\r\n        handleTabChange,\r\n        updateUnreadCount,\r\n        resetFeedbackState,\r\n        submitFeedback,\r\n        cancelFeedback,\r\n        handleConfirmEndChat,\r\n        startNewChat\r\n    } = useChatStore();\r\n    \r\n    const { sendMessage, sendMessageToDashboard } = useSendMessage();\r\n    const {endLiveChat, endBotChat, startChat} = useSocket();\r\n\r\n    const messagesEndRef = useRef(null);\r\n    const menuRef = useRef(null);\r\n    const inputRef = useRef(null);\r\n    const confirmationRef = useRef(null);\r\n    const feedbackRef = useRef(null);\r\n    const widgetRef = useRef(null);\r\n\r\n    // Check if messages exist on page load and switch to chat tab\r\n    useEffect(() => {\r\n        if (messages.length > 0) {\r\n            handleTabChange(\"chat\");\r\n            toggleWidget();\r\n        }\r\n    }, []);\r\n\r\n    // Check if device is mobile\r\n    useEffect(() => {\r\n        const checkIfMobile = () => {\r\n            setIsMobile(window.innerWidth < 640);\r\n        }\r\n\r\n        checkIfMobile();\r\n        window.addEventListener(\"resize\", checkIfMobile);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", checkIfMobile);\r\n        }\r\n    }, []);\r\n\r\n    // Close menu when clicking outside\r\n    useEffect(() => {\r\n        function handleClickOutside(event) {\r\n            if (menuRef.current && !menuRef.current.contains(event.target)) {\r\n                setMenuOpen(false);\r\n            }\r\n\r\n            // Close confirmation dialog when clicking outside\r\n            if (confirmationRef.current && !confirmationRef.current.contains(event.target) && showConfirmation) {\r\n                setShowConfirmation(false);\r\n            }\r\n\r\n            // Don't close the widget when clicking inside it\r\n            if (\r\n                widgetRef.current &&\r\n                !widgetRef.current.contains(event.target) &&\r\n                isOpen &&\r\n                !showConfirmation &&\r\n                !showFeedback\r\n            ) {\r\n                // Uncomment this to make the widget close when clicking outside\r\n                // setIsOpen(false)\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        }\r\n    }, [menuRef, showConfirmation, isOpen, showFeedback]);\r\n\r\n\r\n    // Scroll to bottom when messages change\r\n    useEffect(() => {\r\n        messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages, showFeedback]);\r\n\r\n    // Add a separate effect to scroll when typing indicator appears\r\n    useEffect(() => {\r\n        if (isLoading || isTyping) {\r\n            messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n        }\r\n    }, [isLoading, isTyping]);\r\n\r\n    // Focus input when bot finishes responding\r\n    useEffect(() => {\r\n        // When isLoading changes from true to false, focus the input\r\n        if (\r\n            !isLoading &&\r\n            messages.length > 0 &&\r\n            messages[messages.length - 1].role === \"assistant\" &&\r\n            activeTab === \"chat\" &&\r\n            !chatEnded &&\r\n            isOpen\r\n        ) {\r\n            // Small delay to ensure DOM is updated\r\n            setTimeout(() => {\r\n                inputRef.current?.focus();\r\n            }, 100);\r\n        }\r\n    }, [isLoading, messages, activeTab, chatEnded, isOpen]);\r\n\r\n    // Update unread count when messages change and widget is closed\r\n    useEffect(() => {\r\n        updateUnreadCount();\r\n    }, [messages, isOpen]);\r\n\r\n    // Format time as HH:MM AM/PM\r\n    const formatTime = (timestamp) => {\r\n        if (!timestamp) return '';\r\n        try {\r\n            return new Date(timestamp).toLocaleTimeString(\"en-US\", {\r\n                hour: \"numeric\",\r\n                minute: \"2-digit\",\r\n                hour12: true,\r\n            });\r\n        } catch (error) {\r\n            console.error('Error formatting time:', error);\r\n            return '';\r\n        }\r\n    }\r\n    \r\n    // Calculate time ago from timestamp\r\n    const getTimeAgo = (timestamp) => {\r\n        if (!timestamp) return 'Just now';\r\n        \r\n        try {\r\n            // Parse the timestamp to a Date object if it's a string\r\n            let messageDate;\r\n            if (typeof timestamp === 'string') {\r\n                messageDate = new Date(timestamp);\r\n            } else if (timestamp instanceof Date) {\r\n                messageDate = timestamp;\r\n            } else {\r\n                // If timestamp is neither string nor Date, return default\r\n                return 'Just now';\r\n            }\r\n            \r\n            // Validate that we have a valid date\r\n            if (!(messageDate instanceof Date) || isNaN(messageDate.getTime())) {\r\n                return 'Just now';\r\n            }\r\n            \r\n            const now = new Date();\r\n            const diffMs = now.getTime() - messageDate.getTime();\r\n            \r\n            // Handle future dates or small time differences\r\n            if (diffMs < 0 || diffMs < 60000) return 'Just now';\r\n            \r\n            // Calculate minutes ago\r\n            const minutes = Math.floor(diffMs / 60000);\r\n            if (isNaN(minutes) || minutes < 0) {\r\n                return 'Just now';\r\n            }\r\n            \r\n            return `${minutes}m ago`;\r\n        } catch (error) {\r\n            console.error('Error calculating time ago:', error);\r\n            return 'Just now';\r\n        }\r\n    }\r\n\r\n    // Show confirmation dialog\r\n    const handleEndChatClick = () => {\r\n        // Check if there are any user messages before allowing to end chat\r\n        const hasUserMessages = messages.some(msg => msg.role === 'user');\r\n        if (!hasUserMessages) {\r\n            return; // Don't allow ending chat if no user messages\r\n        }\r\n        \r\n        // Immediately stop typing indicator when user initiates chat end\r\n        setMenuOpen(false)\r\n        setShowConfirmation(true)\r\n        // Force stop typing animation immediately\r\n        useChatStore.setState({\r\n            isTyping: false,\r\n            isLoading: false\r\n        })\r\n    }\r\n\r\n    // Handle input change on the chat box\r\n    const handleInputChange = (e) => {\r\n        setInput(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!input.trim()) return;\r\n\r\n        // Get fresh state to avoid stale closures\r\n        const { isLiveChatActive, dashboardSocket } = useChatStore.getState();\r\n\r\n        console.log('Message submission state:', {\r\n            isLiveChatActive,\r\n            dashboardConnected: dashboardSocket?.connected,\r\n            input\r\n        });\r\n\r\n        if (isLiveChatActive && dashboardSocket?.connected) {\r\n            console.log('Sending to live agent:', input);\r\n            sendMessageToDashboard(input);\r\n        } else {\r\n            // If supposed to be in live chat but connection failed\r\n            console.log('Sending to bot:', input);\r\n            sendMessage(input);\r\n        }\r\n\r\n        setInput('');\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className=\"fixed z-50 bottom-8 right-4 flex flex-col items-end\"\r\n            ref={widgetRef}\r\n        >\r\n            {/* Expanded Widget */}\r\n            {isOpen && (\r\n                <div\r\n                    className={`bg-white rounded-lg shadow-lg overflow-hidden transition-all duration-300 ease-in-out mb-3\r\n            ${isFullscreen ? \"fixed inset-4 w-auto h-auto\" : \"w-[350px] sm:w-[380px] h-[600px]\"}\r\n            ${isFullscreen ? \"z-50\" : \"z-40\"}\r\n            ${!isFullscreen && widgetPosition === \"bottom-center\" ? \"fixed bottom-8 left-1/2 transform -translate-x-1/2\" : \"\"}\r\n            ${!isFullscreen && widgetPosition === \"bottom-left\" ? \"fixed bottom-8 left-4\" : \"\"}\r\n          `}\r\n                    style={{\r\n                        transform: isOpen ? \"scale(1)\" : \"scale(0.95)\",\r\n                        opacity: isOpen ? 1 : 0,\r\n                        transformOrigin: widgetPosition === \"bottom-right\" ? \"bottom right\" : \r\n                                        widgetPosition === \"bottom-center\" ? \"bottom center\" : \"bottom left\",\r\n                        marginBottom: widgetPosition !== \"bottom-right\" ? \"60px\" : \"12px\"\r\n                    }}\r\n                >\r\n                    {/* Widget Header */}\r\n                    <div className=\"bg-blue-600 text-white p-3 flex items-center justify-between\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                            {isLiveChatActive ? (\r\n                                <>\r\n                                    <div className=\"flex-shrink-0 h-6 w-6 bg-blue-700 rounded-full flex items-center justify-center\">\r\n                                        <span className=\"text-white text-xs font-bold\">\r\n                                            {agentName?.charAt(0) || 'A'}\r\n                                        </span>\r\n                                    </div>\r\n                                    <span className=\"font-medium\">{agentName || 'Agent'}</span>\r\n                                </>\r\n                            ) : (\r\n                                <>\r\n                                    <GraduationCap className=\"h-5 w-5\" />\r\n                                    <span className=\"font-medium whitespace-nowrap\">Campus Assistant</span>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"flex items-center gap-1\">\r\n                            <button\r\n                                onClick={toggleFullscreen}\r\n                                className=\"p-1.5 hover:bg-blue-700 rounded-full transition-colors\"\r\n                                aria-label={isFullscreen ? \"Exit fullscreen\" : \"Fullscreen\"}\r\n                            >\r\n                                {isFullscreen ? <Minimize2 className=\"h-4 w-4\" /> : <Maximize2 className=\"h-4 w-4\" />}\r\n                            </button>\r\n                            <button\r\n                                onClick={toggleWidget}\r\n                                className=\"p-1.5 hover:bg-blue-700 rounded-full transition-colors\"\r\n                                aria-label=\"Close chat\"\r\n                            >\r\n                                <X className=\"h-4 w-4\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    {/* Widget Content */}\r\n                    <div className=\"flex flex-col h-[calc(100%-56px)]\">\r\n                        {/* Home Tab Content */}\r\n                        {activeTab === \"home\" && (\r\n                            <div className=\"flex-1 overflow-y-auto\">\r\n                                <div className=\"bg-gradient-to-b from-blue-500 to-blue-300 p-6 pb-12\">\r\n                                    <div className=\"flex justify-between items-start mb-4\">\r\n                                        <div className=\"w-10 h-10 bg-white rounded-full flex items-center justify-center\">\r\n                                            <GraduationCap className=\"h-5 w-5 text-blue-600\" />\r\n                                        </div>\r\n                                        <div className=\"flex -space-x-2\">\r\n                                            {[\"A\", \"B\", \"C\"].map((letter, i) => (\r\n                                                <div\r\n                                                    key={i}\r\n                                                    className={`w-8 h-8 rounded-full flex items-center justify-center text-white text-xs font-medium border-2 border-white ${\r\n                                                        i === 0 ? \"bg-blue-700\" : i === 1 ? \"bg-yellow-500\" : \"bg-red-500\"\r\n                                                    }`}\r\n                                                >\r\n                                                    {letter}\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <h1 className=\"text-2xl font-bold text-white mb-1\">Hi Student 👋</h1>\r\n                                    <p className=\"text-lg text-white/90 font-medium\">How can we help?</p>\r\n                                </div>\r\n\r\n                                <div className=\"px-4 -mt-6\">\r\n                                    <div className=\"bg-white rounded-lg shadow-md p-4 mb-4\">\r\n                                        <h2 className=\"text-sm font-medium text-gray-700 mb-2\">Recent conversation</h2>\r\n                                        {messages.length > 1 ? (\r\n                                            <div\r\n                                                className=\"flex items-start gap-3 border-l-2 border-blue-500 pl-3 py-1 cursor-pointer hover:bg-gray-50 rounded-md transition-colors\"\r\n                                                onClick={() => handleTabChange(\"chat\")}\r\n                                            >\r\n                                                <div className=\"flex-shrink-0 h-6 w-6 bg-blue-100 rounded-full flex items-center justify-center\">\r\n                                                    <GraduationCap className=\"h-3 w-3 text-blue-600\" />\r\n                                                </div>\r\n                                                <div>\r\n                                                    <p className=\"text-xs text-gray-800 line-clamp-2\">{messages[messages.length - 1].content}</p>\r\n                                                    <p className=\"text-[10px] text-gray-500 mt-1\">\r\n                                                        {formatTime([messages[messages.length - 1].timestamp])}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <p className=\"text-xs text-gray-500\">No recent conversations</p>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <button\r\n                                        onClick={() => handleTabChange(\"chat\")}\r\n                                        className=\"w-full bg-white rounded-lg shadow-sm border border-gray-200 p-4 mb-4 flex items-center justify-between\"\r\n                                    >\r\n                                        <div className=\"flex items-center gap-3\">\r\n                                            <MessageCircle className=\"h-5 w-5 text-blue-600\" />\r\n                                            <div className=\"text-left\">\r\n                                                <p className=\"text-sm font-medium text-gray-800\">Chat with us</p>\r\n                                                <p className=\"text-xs text-gray-500\">We typically reply in under 5 minutes</p>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"text-blue-600\">\r\n                                            <ChevronRight className=\"h-5 w-5\" />\r\n                                        </div>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Chat Tab Content */}\r\n                        {activeTab === \"chat\" && (\r\n                            <div className=\"flex-1 overflow-y-auto p-3 sm:p-4 custom-scrollbar bg-white\">\r\n                                {messages.map((msg) => {\r\n                                    const timestamp = msg.timestamp;\r\n                                    const isUser = msg.role === 'user';\r\n                                    const isSystem = msg.role === 'system';\r\n\r\n                                    if (isSystem) {\r\n                                        return (\r\n                                            <div key={msg.id} className=\"flex justify-center my-2\">\r\n                                                <div className=\"bg-gray-100 text-gray-600 text-xs px-3 py-1.5 rounded-full\">\r\n                                                    {msg.content}\r\n                                                </div>\r\n                                            </div>\r\n                                        );\r\n                                    }\r\n\r\n                                    return (\r\n                                        <div key={msg.id} className={`flex flex-col ${isUser ? 'items-end' : 'items-start'} mb-4`}>\r\n                                            {/* We're removing the sender name from outside the bubble */}\r\n\r\n                                            {/* Message content */}\r\n                                            <div className=\"flex\">\r\n                                                <div\r\n                                                    className={`p-3 max-w-[85%] ${isUser ? 'bg-blue-600 text-white rounded-t-2xl rounded-bl-2xl' : 'bg-gray-100 text-gray-800 rounded-t-2xl rounded-br-2xl'}`}\r\n                                                    style={{ minWidth: !isUser ? '200px' : 'auto' }}\r\n                                                >\r\n                                                    {/* Text Messages */}\r\n                                                    {msg.type === 'text' && (\r\n                                                        <>\r\n                                                            {!isUser && (\r\n                                                                <div className=\"flex flex-wrap items-center mb-1\">\r\n                                                                    <span className=\"text-sm font-medium text-blue-600 whitespace-nowrap mr-2\">\r\n                                                                        {msg.role === 'system' ? 'Campus Assistant' : (isLiveChatActive ? agentName || 'Agent' : 'Campus Assistant')}\r\n                                                                    </span>\r\n                                                                    <span className=\"text-xs text-gray-500 whitespace-nowrap\">\r\n                                                                        {getTimeAgo(timestamp)}\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            )}\r\n                                                            <p className=\"text-sm\">{msg.content}</p>\r\n                                                        </>\r\n                                                    )}\r\n\r\n                                                    {/* Image Messages */}\r\n                                                    {msg.type === 'image' && (\r\n                                                        <img\r\n                                                            src={msg.content}\r\n                                                            alt=\"Bot response\"\r\n                                                            className=\"rounded-lg max-w-[200px]\"\r\n                                                        />\r\n                                                    )}\r\n\r\n                                                    {/* Buttons */}\r\n                                                    {msg.type === 'buttons' && msg.payload && (\r\n                                                        <div className=\"flex flex-wrap gap-2 mt-3\">\r\n                                                            {msg.payload.map((button, idx) => (\r\n                                                                <button\r\n                                                                    key={`btn-${idx}-${button.title}`}\r\n                                                                    onClick={() => sendMessage(button.payload)}\r\n                                                                    className=\"px-3 py-1 text-xs bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors\"\r\n                                                                >\r\n                                                                    {button.title}\r\n                                                                </button>\r\n                                                            ))}\r\n                                                        </div>\r\n                                                    )}\r\n\r\n                                                    {/* Custom Payload */}\r\n                                                    {msg.type === 'custom' && (\r\n                                                        <pre className=\"bg-gray-200 text-gray-700 p-2 rounded-md text-xs mt-2 overflow-x-auto\">\r\n                                                            {JSON.stringify(msg.payload, null, 2)}\r\n                                                        </pre>\r\n                                                    )}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    );\r\n                                })}\r\n\r\n                                {/* Loading Typing Indicator || isTyping - Only show when chat is active */}\r\n                                {(isLoading || isTyping) && !chatEnded && !showFeedback && !showConfirmation && (\r\n                                    <div className=\"flex flex-col items-start mb-4\">\r\n                                        {/* Removed agent name header for typing indicator */}\r\n                                        <div className=\"flex\">\r\n                                            <div className=\"bg-gray-100 text-gray-800 rounded-t-2xl rounded-br-2xl p-3 max-w-[85%]\" style={{ minWidth: '200px' }}>\r\n                                                <div className=\"flex flex-wrap items-center mb-1\">\r\n                                                    <span className=\"text-sm font-medium text-blue-600 whitespace-nowrap mr-2\">\r\n                                                        {isLiveChatActive ? agentName || 'Romeo' : 'Campus Assistant'}\r\n                                                    </span>\r\n                                                    <span className=\"text-xs text-gray-500 whitespace-nowrap\">\r\n                                                        • Just now\r\n                                                    </span>\r\n                                                </div>\r\n                                                <div className=\"flex space-x-2\">\r\n                                                    <div className=\"h-2 w-2 bg-gray-400 rounded-full typing-dot animate-bounce\" style={{ animationDelay: '0ms' }} />\r\n                                                    <div className=\"h-2 w-2 bg-gray-400 rounded-full typing-dot animate-bounce\" style={{ animationDelay: '150ms' }} />\r\n                                                    <div className=\"h-2 w-2 bg-gray-400 rounded-full typing-dot animate-bounce\" style={{ animationDelay: '300ms' }} />\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )}\r\n                                <div ref={messagesEndRef} />\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Feedback Form */}\r\n                        {showFeedback && (\r\n                            <div className=\"bg-white rounded-lg border border-gray-200 p-3 sm:p-4 space-y-3\">\r\n                                <h3 className=\"text-sm font-medium\">Chat Feedback</h3>\r\n                                <p className=\"text-xs text-gray-600\">Please rate your experience with our chat support.</p>\r\n                                \r\n                                {/* Feedback Submission Status */}\r\n                                {feedbackSubmissionStatus === 'success' && (\r\n                                    <div className=\"bg-green-50 border border-green-200 text-green-700 px-3 py-2 rounded-md text-xs flex items-center\">\r\n                                        <div className=\"mr-2 flex-shrink-0 h-4 w-4 bg-green-100 rounded-full flex items-center justify-center\">\r\n                                            <span className=\"text-green-500 text-xs\">✓</span>\r\n                                        </div>\r\n                                        Thank you for your feedback! Your responses help us improve.\r\n                                    </div>\r\n                                )}\r\n                                \r\n                                {feedbackSubmissionStatus === 'error' && (\r\n                                    <div className=\"bg-red-50 border border-red-200 text-red-700 px-3 py-2 rounded-md text-xs flex items-center\">\r\n                                        <div className=\"mr-2 flex-shrink-0 h-4 w-4 bg-red-100 rounded-full flex items-center justify-center\">\r\n                                            <span className=\"text-red-500 text-xs\">!</span>\r\n                                        </div>\r\n                                        There was an error submitting your feedback. Please try again.\r\n                                    </div>\r\n                                )}\r\n\r\n                                {/* Star Rating */}\r\n                                <div>\r\n                                    <p className=\"text-xs font-medium text-gray-700 mb-1.5\">How would you rate this conversation?</p>\r\n                                    <div className=\"flex gap-1\">\r\n                                        {[1, 2, 3, 4, 5].map((rating) => (\r\n                                            <button\r\n                                                key={rating}\r\n                                                onClick={() => setFeedbackRating(rating)}\r\n                                                className={`p-1.5 rounded-full ${\r\n                                                    feedbackRating === rating ? 'text-yellow-500' : 'text-gray-300 hover:text-yellow-400'\r\n                                                }`}\r\n                                                disabled={isFeedbackSubmitting}\r\n                                            >\r\n                                                <Star className=\"h-4 w-4\" fill={feedbackRating && rating <= feedbackRating ? 'currentColor' : 'none'} />\r\n                                            </button>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Satisfaction */}\r\n                                <div>\r\n                                    <p className=\"text-xs font-medium text-gray-700 mb-1.5\">Did we resolve your issue?</p>\r\n                                    <div className=\"flex gap-2\">\r\n                                        <button\r\n                                            onClick={() => setFeedbackSatisfied(true)}\r\n                                            className={`flex items-center gap-1.5 px-2.5 py-1.5 rounded-md border text-xs ${\r\n                                                feedbackSatisfied === true\r\n                                                    ? 'border-green-500 bg-green-50 text-green-700'\r\n                                                    : 'border-gray-300 hover:border-gray-400'\r\n                                            }`}\r\n                                            disabled={isFeedbackSubmitting}\r\n                                        >\r\n                                            <ThumbsUp className=\"h-3 w-3\" />\r\n                                            <span>Yes</span>\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => setFeedbackSatisfied(false)}\r\n                                            className={`flex items-center gap-1.5 px-2.5 py-1.5 rounded-md border text-xs ${\r\n                                                feedbackSatisfied === false\r\n                                                    ? 'border-red-500 bg-red-50 text-red-700'\r\n                                                    : 'border-gray-300 hover:border-gray-400'\r\n                                            }`}\r\n                                            disabled={isFeedbackSubmitting}\r\n                                        >\r\n                                            <ThumbsDown className=\"h-3 w-3\" />\r\n                                            <span>No</span>\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                {/* Comments */}\r\n                                <div>\r\n                                    <label htmlFor=\"feedback-comment\" className=\"block text-xs font-medium text-gray-700 mb-1.5\">\r\n                                        Additional comments (optional)\r\n                                    </label>\r\n                                    <textarea\r\n                                        id=\"feedback-comment\"\r\n                                        value={feedbackComment}\r\n                                        onChange={(e) => setFeedbackComment(e.target.value)}\r\n                                        className=\"w-full px-2.5 py-1.5 border border-gray-300 rounded-md focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-transparent text-xs\"\r\n                                        rows={3}\r\n                                        placeholder=\"Tell us more about your experience...\"\r\n                                        disabled={isFeedbackSubmitting}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"flex justify-end gap-2\">\r\n                                    <button\r\n                                        onClick={cancelFeedback}\r\n                                        className=\"px-3 py-1.5 text-xs text-gray-700 hover:bg-gray-100 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                                        disabled={isFeedbackSubmitting}\r\n                                    >\r\n                                        Skip\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={submitFeedback}\r\n                                        className={`px-3 py-1.5 text-xs ${isFeedbackSubmitting ? 'bg-blue-400' : 'bg-blue-600 hover:bg-blue-700'} text-white rounded-md flex items-center gap-1.5 disabled:opacity-50 disabled:cursor-not-allowed`}\r\n                                        disabled={isFeedbackSubmitting || feedbackSubmissionStatus === 'success'}\r\n                                    >\r\n                                        {isFeedbackSubmitting ? (\r\n                                            <>\r\n                                                <span className=\"inline-block h-3 w-3 rounded-full border-2 border-white border-t-transparent animate-spin\"></span>\r\n                                                <span>Submitting...</span>\r\n                                            </>\r\n                                        ) : (\r\n                                            <span>Submit Feedback</span>\r\n                                        )}\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Widget Footer */}\r\n                        <div className=\"border-t border-gray-200 bg-white\">\r\n                            {activeTab === \"chat\" && (\r\n                                <form onSubmit={handleSubmit} className=\"p-3\">\r\n                                    <div className=\"flex items-center gap-2\">\r\n                                        <input\r\n                                            ref={inputRef}\r\n                                            type=\"text\"\r\n                                            value={input}\r\n                                            onChange={handleInputChange}\r\n                                            placeholder={chatEnded ? \"Chat ended. Start a new chat from the menu.\" : isConnectingToLiveAgent ? \"Connecting to live agent...\" : \"Type your message...\"}\r\n                                            className=\"flex-1 rounded-md border border-gray-300 px-3 py-2 focus:outline-none focus:ring-1 focus:ring-blue-600 focus:border-transparent text-xs\"\r\n                                            disabled={isLoading || showConfirmation || showFeedback || chatEnded || isConnectingToLiveAgent}\r\n                                            autoFocus={activeTab === \"chat\" && !chatEnded && !isConnectingToLiveAgent}\r\n                                        />\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"text-blue-500 hover:text-blue-700 transition-colors disabled:opacity-50 disabled:hover:text-blue-500 p-2\"\r\n                                            disabled={isLoading || !input.trim() || showConfirmation || showFeedback || chatEnded || isConnectingToLiveAgent}\r\n                                        >\r\n                                            <Send className=\"h-3.5 w-3.5\" />\r\n                                        </button>\r\n                                        <div className=\"relative\" ref={menuRef}>\r\n                                            <button\r\n                                                onClick={() => setMenuOpen(!menuOpen)}\r\n                                                className=\"text-gray-500 hover:text-gray-700 transition-colors p-2 rounded-md hover:bg-gray-100\"\r\n                                                aria-label=\"Menu\"\r\n                                            >\r\n                                                <MoreVertical className=\"h-3.5 w-3.5\" />\r\n                                            </button>\r\n\r\n                                            {menuOpen && (\r\n                                                <div className=\"absolute bottom-full right-0 mb-2 w-48 bg-white rounded-md shadow-lg border border-gray-200 z-10\">\r\n                                                    <div className=\"py-1\">\r\n                                                        {chatEnded ? (\r\n                                                            <button\r\n                                                                onClick={() => {\r\n                                                                    startNewChat();\r\n                                                                    startChat();\r\n                                                                    // Visual feedback that chat was reset\r\n                                                                    setChatActive(false);\r\n                                                                    setTimeout(() => setChatActive(true), 300);\r\n                                                                    // Focus the input after resetting\r\n                                                                    setTimeout(() => {\r\n                                                                        if (activeTab === \"chat\") {\r\n                                                                            inputRef.current?.focus();\r\n                                                                        }\r\n                                                                    }, 400);\r\n                                                                }}\r\n                                                                className=\"w-full text-left px-4 py-3 text-xs text-gray-700 hover:bg-gray-100 flex items-center gap-2\"\r\n                                                            >\r\n                                                                <PlusCircle className=\"h-3.5 w-3.5\" />\r\n                                                                New Chat\r\n                                                            </button>\r\n                                                        ) : (\r\n                                                            <>\r\n                                                                <button\r\n                                                                    onClick={handleEndChatClick}\r\n                                                                    className={`w-full text-left px-4 py-3 text-xs flex items-center gap-2 ${messages.filter(msg => msg.role === 'user').length === 0 ? 'text-gray-400 cursor-not-allowed' : 'text-gray-700 hover:bg-gray-100'}`}\r\n                                                                    disabled={messages.filter(msg => msg.role === 'user').length === 0}\r\n                                                                >\r\n                                                                    <X className=\"h-3.5 w-3.5\" />\r\n                                                                    End Chat\r\n                                                                </button>\r\n                                                            </>\r\n                                                        )}\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            )}\r\n\r\n                            {/* Tab Navigation */}\r\n                            <div className=\"flex border-t border-gray-200\">\r\n                                <button\r\n                                    onClick={() => handleTabChange(\"home\")}\r\n                                    className={`flex-1 flex items-center justify-center gap-1.5 py-2.5 ${\r\n                                        activeTab === \"home\" ? \"text-blue-600 border-t-2 border-blue-600\" : \"text-gray-500\"\r\n                                    }`}\r\n                                >\r\n                                    <Home className=\"h-3.5 w-3.5\" />\r\n                                    <span className=\"text-xs font-medium\">Home</span>\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => handleTabChange(\"chat\")}\r\n                                    className={`flex-1 flex items-center justify-center gap-1.5 py-2.5 ${\r\n                                        activeTab === \"chat\" ? \"text-blue-600 border-t-2 border-blue-600\" : \"text-gray-500\"\r\n                                    }`}\r\n                                >\r\n                                    <MessageCircle className=\"h-3.5 w-3.5\" />\r\n                                    <span className=\"text-xs font-medium\">Chat</span>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* Confirmation Dialog */}\r\n                        {showConfirmation && (\r\n                            <div className=\"absolute inset-0 z-50 flex items-center justify-center p-4 bg-white bg-opacity-80\">\r\n                                <div\r\n                                    ref={confirmationRef}\r\n                                    className=\"bg-white rounded-lg p-4 max-w-sm w-full shadow-lg border border-gray-200\"\r\n                                >\r\n                                    <h3 className=\"text-sm font-medium mb-2\">End Chat?</h3>\r\n                                    <p className=\"text-xs text-gray-600 mb-4\">Are you sure you want to end this chat session?</p>\r\n                                    <div className=\"flex justify-end gap-3\">\r\n                                        <button\r\n                                            onClick={() => setShowConfirmation(false)}\r\n                                            className=\"px-3 py-1.5 text-xs text-gray-700 hover:bg-gray-100 rounded-md\"\r\n                                        >\r\n                                            Cancel\r\n                                        </button>\r\n                                        <button\r\n                                            onClick={() => {\r\n                                                // Pass the socket actions to handleConfirmEndChat\r\n                                                // instead of calling them separately\r\n                                                handleConfirmEndChat({\r\n                                                    endLiveChat,\r\n                                                    endBotChat\r\n                                                });\r\n                                            }}\r\n                                            className=\"px-3 py-1.5 text-xs bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n                                        >\r\n                                            End Chat\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {/* Chat Button (Collapsed Widget) */}\r\n            <button\r\n                onClick={toggleWidget}\r\n                className={`flex items-center justify-center gap-2 px-4 py-3 rounded-full shadow-lg transition-all duration-300 ease-in-out\r\n                  ${isOpen ? \"scale-0 opacity-0 h-0 w-0\" : \"scale-100 opacity-100\"}\r\n                  ${unreadCount > 0 ? \"bg-blue-600\" : \"bg-blue-500 hover:bg-blue-600\"}\r\n                `}\r\n                aria-label=\"Open chat\"\r\n            >\r\n                <span className=\"text-white font-medium text-sm whitespace-nowrap\">Get help</span>\r\n                {unreadCount > 0 ? (\r\n                    <div className=\"relative\">\r\n                        <HelpCircle className=\"h-5 w-5 text-white\" />\r\n                        <span className=\"absolute -top-1 -right-1 bg-red-500 text-white text-xs w-4 h-4 flex items-center justify-center rounded-full\">\r\n                      {unreadCount}\r\n                    </span>\r\n                    </div>\r\n                ) : (\r\n                    <HelpCircle className=\"h-5 w-5 text-white\" />\r\n                )}\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { SocketProvider, useSocket } from '../context/SocketContext';\r\nimport ChatWidget from './ChatWidget.jsx';\r\nimport useChatStore from '../stores/chatStore';\r\n\r\n/**\r\n * ChatWidgetProvider - A reusable wrapper component for the ChatWidget\r\n * \r\n * This component is designed to be standalone and reusable across different applications.\r\n * It includes its own SocketProvider to handle chat connections.\r\n * \r\n * @param {Object} props - Component props\r\n * @param {Object} props.socketConfig - Configuration for the socket connections\r\n * @param {string} props.socketConfig.rasaServerUrl - URL for the Rasa server\r\n * @param {string} props.socketConfig.socketPath - Socket.io path\r\n * @param {string} props.socketConfig.botMessageEvent - Event name for bot messages\r\n * @param {string} props.socketConfig.userMessageEvent - Event name for user messages\r\n * @param {string} props.socketConfig.dashboardServerUrl - URL for the dashboard server\r\n * @param {string} props.feedbackEndpoint - URL for the feedback submission API endpoint\r\n * @param {string} props.initialPosition - Initial position of the widget: \"bottom-right\", \"bottom-center\", or \"bottom-left\"\r\n * @param {boolean} props.useExistingSocketContext - If true, will use an existing SocketProvider from a parent component if available\r\n */\r\nexport default function ChatWidgetProvider({\r\n    socketConfig = {},\r\n    useExistingSocketContext = false,\r\n    feedbackEndpoint = 'http://localhost:5500/api/v1/feedback/public',\r\n    initialPosition = 'bottom-right'\r\n}) {\r\n    // Try to get existing socket context\r\n    let existingContext;\r\n    try {\r\n        existingContext = useSocket();\r\n    } catch (error) {\r\n        // No existing context found, which is fine\r\n        existingContext = null;\r\n    }\r\n    \r\n    // Set the feedback endpoint and initial position in the store\r\n    useEffect(() => {\r\n        const store = useChatStore.getState();\r\n        store.setFeedbackEndpoint(feedbackEndpoint);\r\n        store.setWidgetPosition(initialPosition);\r\n    }, [feedbackEndpoint, initialPosition]);\r\n\r\n    // If we have an existing context and we want to use it, just render the ChatWidget\r\n    if (existingContext && useExistingSocketContext) {\r\n        return <ChatWidget />;\r\n    }\r\n    \r\n    // Otherwise, provide our own SocketProvider\r\n    // This makes the component fully standalone and reusable\r\n    return (\r\n        <SocketProvider config={socketConfig}>\r\n            <ChatWidget />\r\n        </SocketProvider>\r\n    );\r\n}\r\n"],"names":["toPascalCase","string","camelCase","replace","match","p1","p2","toUpperCase","toLowerCase","toCamelCase","charAt","slice","mergeClasses","classes","filter","className","index","array","Boolean","trim","indexOf","join","hasA11yProp","props","prop","startsWith","defaultAttributes","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Icon","forwardRef","color","size","absoluteStrokeWidth","children","iconNode","rest","ref","createElement","Number","map","tag","attrs","Array","isArray","createLucideIcon","iconName","Component","displayName","ChevronRight","d","key","CircleHelp","cx","cy","r","CirclePlus","EllipsisVertical","GraduationCap","House","Maximize2","MessageCircle","Minimize2","Send","Star","ThumbsDown","ThumbsUp","X","createStoreImpl","createState","state","listeners","Set","setState","partial","nextState","Object","is","previousState","assign","forEach","listener","getState","api","getInitialState","initialState","subscribe","add","delete","identity","arg","createImpl","createStore","useBoundStore","selector","React","useSyncExternalStore","useDebugValue","useStore","createJSONStorage","getStorage","options","storage","e","persistStorage","getItem","name","_a","parse","str2","JSON","str","Promise","then","setItem","newValue","stringify","removeItem","toThenable","fn","input","result","onFulfilled","_onRejected","this","_onFulfilled","catch","onRejected","useChatStore","config","baseOptions","set","get","localStorage","partialize","version","merge","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","console","warn","savedSetState","configResult","stateFromStorage","hydrate","_b","cb","_a2","postRehydrationCallback","onRehydrateStorage","call","bind","deserializedStorageValue","migrate","migration","error","migrationResult","migrated","migratedState","persist","setOptions","newOptions","clearStorage","getOptions","rehydrate","onHydrate","onFinishHydration","skipHydration","socket","sessionId","messages","isLoading","isTyping","dashboardSocket","isConnected","agentName","isLiveChatActive","lastChatState","chatEnded","isOpen","widgetPosition","isFullscreen","activeTab","chatActive","menuOpen","isMobile","showConfirmation","showFeedback","feedbackRating","feedbackComment","feedbackSatisfied","unreadCount","isFeedbackSubmitting","feedbackSubmissionStatus","feedbackEndpoint","connectionErrorShown","dashboardConnectionErrorShown","isConnectingToLiveAgent","setSocket","setDashboardSocket","setAgentName","setIsTyping","setIsLiveChatActive","log","setSessionId","setLoading","setConnected","setChatEnded","addMessage","message","role","recentMessages","msg","type","content","length","lastMessageTime","Date","timestamp","getTime","concat","_toConsumableArray","clearMessages","setConnectionErrorShown","shown","resetConnectionErrorShown","setDashboardConnectionErrorShown","resetDashboardConnectionErrorShown","setIsConnectingToLiveAgent","isConnecting","setIsOpen","setWidgetPosition","setIsFullscreen","setActiveTab","setInput","setChatActive","setMenuOpen","setIsMobile","setShowConfirmation","setShowFeedback","setFeedbackRating","setFeedbackComment","setFeedbackSatisfied","setUnreadCount","setFeedbackEndpoint","toggleWidget","toggleFullscreen","togglePosition","newPosition","handleTabChange","tab","updateUnreadCount","m","handleInputChange","target","value","resetFeedbackState","submitFeedback","feedbackData","rating","comment","satisfied","fetch","method","headers","body","response","ok","Error","status","json","data","id","now","toString","toISOString","setTimeout","cancelFeedback","handleConfirmEndChat","_handleConfirmEndChat","_asyncToGenerator","_regenerator","_callee","socketActions","_t","_t2","_args","arguments","w","_context","n","undefined","p","endLiveChat","emit","disconnect","endBotChat","session_id","v","a","apply","initiateHandoff","startNewChat","endExistingLiveChat","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","ERROR_PACKET","withNativeBlob","Blob","prototype","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","shift","j","Emitter","mixin","on","addEventListener","event","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","splice","emitReserved","hasListeners","nextTick","resolve","setTimeoutFn","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","clearTimeoutFn","randomString","Math","random","TransportError","constructor","reason","description","context","super","Transport","writable","query","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","port","secure","encodedQuery","encodeURIComponent","Polling","_polling","_poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","_create","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","_onLoad","_onError","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","hasXHR2","newRequest","responseType","isReactNative","navigator","product","BaseWS","protocols","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","expectedLength","isBinary","headerArray","getUint16","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","polling","re","parts","src","b","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","_hasPingExpired","hasExpired","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","o","DEFAULT_TRANSPORTS","withNativeFile","File","hasBinary","toJSON","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","isObject","Decoder","reviver","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","deconstruction","unshift","freeze","connect","connect_error","disconnecting","newListener","Socket","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","byteToHex","getRandomValues","rnds8","native","randomUUID","crypto","v4","rnds","rng","arr","unsafeStringify","ERROR_TYPES","SocketContext","createContext","useSocket","useContext","DEFAULT_CONFIG","rasaServerUrl","socketPath","botMessageEvent","userMessageEvent","dashboardServerUrl","logError","isBrowser","SocketProvider","_ref","_ref$config","_useState2","_slicedToArray","useState","onLine","isOnline","setIsOnline","socketConfig","_objectSpread","_useState4","reconnectAttempts","setReconnectAttempts","_useChatStore","useEffect","handleOnline","connectToDashboard","handleOffline","storedSessionId","uuidv4","fallbackSessionId","reconnectBasedOnState","_ref2","_currentState$dashboa","dashboardSocketConnection","includes","_ref3","connectionTimeout","agentMessage","text","_useChatStore$getStat","_ref4","_callee2","_useChatStore$getStat4","_context2","_ref5","_callee3","_useChatStore$getStat5","_context3","socketConnection","_useChatStore$getStat6","botResponse","idBase","handoff","buttons","quick_replies","btn","title","image","custom","userMessage","prev","sendMessage","_ref6","_callee4","_useChatStore$getStat7","_context4","_x","_jsx","jsx","Provider","disconnectFromDashboard","startChat","newSessionId","_useChatStore$getStat3","handleUnexpectedError","useSendMessage","socketContext","eventName","sendMessageToDashboard","ChatWidget","_useSendMessage","_useSocket","messagesEndRef","useRef","menuRef","inputRef","confirmationRef","widgetRef","checkIfMobile","innerWidth","handleClickOutside","current","contains","_messagesEndRef$curre","scrollIntoView","behavior","_messagesEndRef$curre2","_inputRef$current","focus","getTimeAgo","messageDate","isNaN","diffMs","minutes","_jsxs","jsxs","style","opacity","transformOrigin","marginBottom","_Fragment","onClick","letter","toLocaleTimeString","hour","minute","hour12","formatTime","isUser","minWidth","alt","button","idx","animationDelay","disabled","htmlFor","onChange","rows","onSubmit","preventDefault","dashboardConnected","autoFocus","MoreVertical","_inputRef$current2","PlusCircle","Home","HelpCircle","existingContext","_ref$socketConfig","_ref$useExistingSocke","useExistingSocketContext","_ref$feedbackEndpoint","_ref$initialPosition","initialPosition","store"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52]}